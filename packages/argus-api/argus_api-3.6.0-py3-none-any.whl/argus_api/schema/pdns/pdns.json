{
  "swagger": "2.0",
  "info": {},
  "basePath": "/",
  "tags": [
    {
      "name": "pdns/v3"
    }
  ],
  "paths": {
    "/pdns/v3/cof/{query}": {
      "get": {
        "tags": [
          "pdns/v3"
        ],
        "summary": "Search against PassiveDNS and return matching records in PDNS COF format (PUBLIC)",
        "description": "This endpoint behaves exactly like searchRecordsSimplified, but follows the Passive DNS Common Output Format as specified in Internet Draft draft-dulaunoy-dnsop-passive-dns-cof-06.\nThis means that the return format of this endpoint is a newline-separated list of JSON objects.",
        "operationId": "searchRecordsSimplifiedCOF",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "Search by query",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregate",
            "in": "query",
            "description": "Whether aggregate records",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeAnonymous",
            "in": "query",
            "description": "Whether include anonymous records",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "rrClass",
            "in": "query",
            "description": "Search by recordClass (rrclass)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rrType",
            "in": "query",
            "description": "Search by type (rrtype)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "customerID",
            "in": "query",
            "description": "Search by customerID",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tlp",
            "in": "query",
            "description": "Search by TLP",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "white",
                "green",
                "amber",
                "red"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of records",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of records to be returned",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "402": {
            "description": "Resource limit exceeded"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/pdns/v3/search": {
      "post": {
        "tags": [
          "pdns/v3"
        ],
        "summary": "Search against PassiveDNS with criteria and return matching records (PUBLIC)",
        "description": "Search against PassiveDNS with criteria and return matching records. If user exceeds current resource limits, this operation may return status code 402. If that happens, the metaData key millisUntilResourcesAvailable gives a hint as to how long the client needs to wait before attempting again.",
        "operationId": "searchRecords",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PassiveDNSSearchCriteriaV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-PassiveDNSRecordV3-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "402": {
            "description": "Resource limit exceeded."
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/pdns/v3/{query}": {
      "get": {
        "tags": [
          "pdns/v3"
        ],
        "summary": "Search against PassiveDNS and return matching records (PUBLIC)",
        "description": "Search against PassiveDNS with criteria and return matching records. If user exceeds current resource limits, this operation may return status code 402. If that happens, the metaData key millisUntilResourcesAvailable gives a hint as to how long the client needs to wait before attempting again.",
        "operationId": "searchRecordsSimplified",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "Search by query",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregate",
            "in": "query",
            "description": "Whether aggregate records",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeAnonymous",
            "in": "query",
            "description": "Whether include anonymous records",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "rrClass",
            "in": "query",
            "description": "Search by recordClass (rrclass)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rrType",
            "in": "query",
            "description": "Search by type (rrtype)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "customerID",
            "in": "query",
            "description": "Search by customerID",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tlp",
            "in": "query",
            "description": "Search by TLP",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "white",
                "green",
                "amber",
                "red"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of records",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max number of records to be returned",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-PassiveDNSRecordV3-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "402": {
            "description": "Resource limit exceeded"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/pdns/v3/{query}/seen": {
      "get": {
        "tags": [
          "pdns/v3"
        ],
        "summary": "Search against PassiveDNS and return true if matching records are found (PUBLIC)",
        "description": "Search against PassiveDNS and return true if matching records are found. If user exceeds current resource limits, this operation may return status code 402. If that happens, the metaData key millisUntilResourcesAvailable gives a hint as to how long the client needs to wait before attempting again.",
        "operationId": "existsRecordsOfTlpLevels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "Search by query, can be IP, not subnet, or domain",
            "required": true,
            "type": "string"
          },
          {
            "name": "tlp",
            "in": "query",
            "description": "Search by TLP",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "white",
              "enum": [
                "white",
                "green",
                "amber",
                "red"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ignoreOwnRecords",
            "in": "query",
            "description": "Whether to ignore user's customer's own records, defaults to true",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-PDNSExistsRecordsResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "402": {
            "description": "Resource limit exceeded"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/pdns/v3/record": {
      "post": {
        "tags": [
          "pdns/v3"
        ],
        "summary": "Submit PassiveDNS records in a bulk operation (INTERNAL)",
        "description": "",
        "operationId": "submitPDNSRecordsBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PDNS bulk submission request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PDNSBulkSubmissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-PDNSBulkSubmissionResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation failed"
          }
        }
      }
    }
  },
  "definitions": {
    "PDNSExistsRecordsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "position": 0,
          "description": "Does records that match the query exist. "
        }
      }
    },
    "PDNSBulkSubmissionResponse": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Number of successfully submitted records. "
        },
        "rejected": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Number of records that failed validation. "
        },
        "errorInformationList": {
          "type": "array",
          "position": 0,
          "description": "Information regarding any records that rejected during validation. ",
          "items": {
            "$ref": "#/definitions/PDNSRecordErrorInformation"
          }
        }
      }
    },
    "ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "PDNSRequestRecord": {
      "type": "object",
      "required": [
        "answer",
        "query",
        "recordClass",
        "recordType",
        "tlp"
      ],
      "properties": {
        "lastSeen": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Last seen, defaults to reception from agent. Accepts ISO-8601 timestamp string. (default now)"
        },
        "firstSeen": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "First time record was seen, usually is set by agent. Accepts ISO-8601 timestamp string. (default now)"
        },
        "times": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Incident count (default 1)",
          "minimum": 1,
          "default": 1
        },
        "minTTLSec": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Minimum Time to leave in seconds. ",
          "minimum": 0
        },
        "maxTTLSec": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Max Time to leave in seconds. ",
          "minimum": 0
        },
        "query": {
          "type": "string",
          "position": 0,
          "description": "Querying address "
        },
        "answer": {
          "type": "string",
          "position": 0,
          "description": "Answering address "
        },
        "customer": {
          "type": "string",
          "position": 0,
          "description": "ID or shortname of customer "
        },
        "tlp": {
          "type": "string",
          "position": 0,
          "description": "Traffic Light Protocol ",
          "enum": [
            "white",
            "green",
            "amber",
            "red"
          ]
        },
        "recordClass": {
          "type": "string",
          "position": 0,
          "description": "Record class type (default in)"
        },
        "recordType": {
          "type": "string",
          "position": 0,
          "description": "Record recordType "
        }
      }
    },
    "ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResultStash-PassiveDNSRecordV3-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/PassiveDNSRecordV3"
          }
        }
      }
    },
    "ResultStash-PDNSBulkSubmissionResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/PDNSBulkSubmissionResponse"
        }
      }
    },
    "ResultStash-PDNSExistsRecordsResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/PDNSExistsRecordsResponse"
        }
      }
    },
    "PassiveDNSRecordV3": {
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "times": {
          "type": "integer",
          "format": "int64"
        },
        "tlp": {
          "type": "string",
          "enum": [
            "white",
            "green",
            "amber",
            "red"
          ]
        },
        "query": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        },
        "minTtl": {
          "type": "integer",
          "format": "int64"
        },
        "maxTtl": {
          "type": "integer",
          "format": "int64"
        },
        "customer": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "lastSeenTimestamp": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "firstSeenTimestamp": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "rrclass": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "in"
          ]
        },
        "rrtype": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "a",
            "aaaa",
            "cname",
            "dname",
            "mx",
            "naptr",
            "ns",
            "ptr",
            "rp",
            "soa",
            "srv",
            "txt"
          ]
        }
      }
    },
    "PDNSRecordErrorInformation": {
      "type": "object",
      "properties": {
        "submissionIndex": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Index of the submission as it appears in the submission request. "
        },
        "errorMessages": {
          "type": "array",
          "position": 0,
          "description": "String message of error cause. ",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PDNSBulkSubmissionRequest": {
      "type": "object",
      "required": [
        "records"
      ],
      "properties": {
        "records": {
          "type": "array",
          "position": 0,
          "description": "PDNS records for submission. ",
          "items": {
            "$ref": "#/definitions/PDNSRequestRecord"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "ignoreOnFailed": {
          "type": "boolean",
          "position": 0,
          "description": "Set this value for successful response even failures occur while submitting. (default false)",
          "default": false
        }
      }
    },
    "DomainInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CustomerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "domain": {
          "$ref": "#/definitions/DomainInfo"
        }
      }
    },
    "PassiveDNSSearchCriteriaV1": {
      "type": "object",
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "type": "string",
          "position": 0,
          "description": "Lookup query "
        },
        "aggregateResult": {
          "type": "boolean",
          "position": 0,
          "description": "Whether aggregate results (default true) "
        },
        "includeAnonymousResults": {
          "type": "boolean",
          "position": 0,
          "description": "Whether include anonymous results (default true) "
        },
        "rrClass": {
          "type": "array",
          "position": 0,
          "description": "Lookup with specified record classes ",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "rrType": {
          "type": "array",
          "position": 0,
          "description": "Lookup with specified record types ",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "customerID": {
          "type": "array",
          "position": 0,
          "description": "Lookup for specified customer IDs ",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "tlp": {
          "type": "array",
          "position": 0,
          "description": "Lookup with specified TLPs, public usage only TLP white allowed ",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "white",
              "green",
              "amber",
              "red"
            ]
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results to be returned, default unset means default limit 25 will be used, 0 means unlimited "
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Number of results to be skipped first, default 0 (default 0)",
          "minimum": 0,
          "default": 0
        }
      }
    }
  }
}