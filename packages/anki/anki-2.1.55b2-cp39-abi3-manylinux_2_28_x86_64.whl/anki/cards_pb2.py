# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/cards.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2
from anki import collection_pb2 as anki_dot_collection__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x61nki/cards.proto\x12\nanki.cards\x1a\x12\x61nki/generic.proto\x1a\x15\x61nki/collection.proto\"\x15\n\x06\x43\x61rdId\x12\x0b\n\x03\x63id\x18\x01 \x01(\x03\"\x17\n\x07\x43\x61rdIds\x12\x0c\n\x04\x63ids\x18\x01 \x03(\x03\"\xfe\x02\n\x04\x43\x61rd\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0f\n\x07note_id\x18\x02 \x01(\x03\x12\x0f\n\x07\x64\x65\x63k_id\x18\x03 \x01(\x03\x12\x14\n\x0ctemplate_idx\x18\x04 \x01(\r\x12\x12\n\nmtime_secs\x18\x05 \x01(\x03\x12\x0b\n\x03usn\x18\x06 \x01(\x11\x12\r\n\x05\x63type\x18\x07 \x01(\r\x12\r\n\x05queue\x18\x08 \x01(\x11\x12\x0b\n\x03\x64ue\x18\t \x01(\x11\x12\x10\n\x08interval\x18\n \x01(\r\x12\x13\n\x0b\x65\x61se_factor\x18\x0b \x01(\r\x12\x0c\n\x04reps\x18\x0c \x01(\r\x12\x0e\n\x06lapses\x18\r \x01(\r\x12\x17\n\x0fremaining_steps\x18\x0e \x01(\r\x12\x14\n\x0coriginal_due\x18\x0f \x01(\x11\x12\x18\n\x10original_deck_id\x18\x10 \x01(\x03\x12\r\n\x05\x66lags\x18\x11 \x01(\r\x12\x1e\n\x11original_position\x18\x12 \x01(\rH\x00\x88\x01\x01\x12\x13\n\x0b\x63ustom_data\x18\x13 \x01(\tB\x14\n\x12_original_position\"N\n\x12UpdateCardsRequest\x12\x1f\n\x05\x63\x61rds\x18\x01 \x03(\x0b\x32\x10.anki.cards.Card\x12\x17\n\x0fskip_undo_entry\x18\x02 \x01(\x08\"&\n\x12RemoveCardsRequest\x12\x10\n\x08\x63\x61rd_ids\x18\x01 \x03(\x03\"3\n\x0eSetDeckRequest\x12\x10\n\x08\x63\x61rd_ids\x18\x01 \x03(\x03\x12\x0f\n\x07\x64\x65\x63k_id\x18\x02 \x01(\x03\"0\n\x0eSetFlagRequest\x12\x10\n\x08\x63\x61rd_ids\x18\x01 \x03(\x03\x12\x0c\n\x04\x66lag\x18\x02 \x01(\r2\xe6\x02\n\x0c\x43\x61rdsService\x12/\n\x07GetCard\x12\x12.anki.cards.CardId\x1a\x10.anki.cards.Card\x12I\n\x0bUpdateCards\x12\x1e.anki.cards.UpdateCardsRequest\x1a\x1a.anki.collection.OpChanges\x12\x42\n\x0bRemoveCards\x12\x1e.anki.cards.RemoveCardsRequest\x1a\x13.anki.generic.Empty\x12J\n\x07SetDeck\x12\x1a.anki.cards.SetDeckRequest\x1a#.anki.collection.OpChangesWithCount\x12J\n\x07SetFlag\x12\x1a.anki.cards.SetFlagRequest\x1a#.anki.collection.OpChangesWithCountB\x02P\x01\x62\x06proto3')



_CARDID = DESCRIPTOR.message_types_by_name['CardId']
_CARDIDS = DESCRIPTOR.message_types_by_name['CardIds']
_CARD = DESCRIPTOR.message_types_by_name['Card']
_UPDATECARDSREQUEST = DESCRIPTOR.message_types_by_name['UpdateCardsRequest']
_REMOVECARDSREQUEST = DESCRIPTOR.message_types_by_name['RemoveCardsRequest']
_SETDECKREQUEST = DESCRIPTOR.message_types_by_name['SetDeckRequest']
_SETFLAGREQUEST = DESCRIPTOR.message_types_by_name['SetFlagRequest']
CardId = _reflection.GeneratedProtocolMessageType('CardId', (_message.Message,), {
  'DESCRIPTOR' : _CARDID,
  '__module__' : 'anki.cards_pb2'
  # @@protoc_insertion_point(class_scope:anki.cards.CardId)
  })
_sym_db.RegisterMessage(CardId)

CardIds = _reflection.GeneratedProtocolMessageType('CardIds', (_message.Message,), {
  'DESCRIPTOR' : _CARDIDS,
  '__module__' : 'anki.cards_pb2'
  # @@protoc_insertion_point(class_scope:anki.cards.CardIds)
  })
_sym_db.RegisterMessage(CardIds)

Card = _reflection.GeneratedProtocolMessageType('Card', (_message.Message,), {
  'DESCRIPTOR' : _CARD,
  '__module__' : 'anki.cards_pb2'
  # @@protoc_insertion_point(class_scope:anki.cards.Card)
  })
_sym_db.RegisterMessage(Card)

UpdateCardsRequest = _reflection.GeneratedProtocolMessageType('UpdateCardsRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATECARDSREQUEST,
  '__module__' : 'anki.cards_pb2'
  # @@protoc_insertion_point(class_scope:anki.cards.UpdateCardsRequest)
  })
_sym_db.RegisterMessage(UpdateCardsRequest)

RemoveCardsRequest = _reflection.GeneratedProtocolMessageType('RemoveCardsRequest', (_message.Message,), {
  'DESCRIPTOR' : _REMOVECARDSREQUEST,
  '__module__' : 'anki.cards_pb2'
  # @@protoc_insertion_point(class_scope:anki.cards.RemoveCardsRequest)
  })
_sym_db.RegisterMessage(RemoveCardsRequest)

SetDeckRequest = _reflection.GeneratedProtocolMessageType('SetDeckRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETDECKREQUEST,
  '__module__' : 'anki.cards_pb2'
  # @@protoc_insertion_point(class_scope:anki.cards.SetDeckRequest)
  })
_sym_db.RegisterMessage(SetDeckRequest)

SetFlagRequest = _reflection.GeneratedProtocolMessageType('SetFlagRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETFLAGREQUEST,
  '__module__' : 'anki.cards_pb2'
  # @@protoc_insertion_point(class_scope:anki.cards.SetFlagRequest)
  })
_sym_db.RegisterMessage(SetFlagRequest)

_CARDSSERVICE = DESCRIPTOR.services_by_name['CardsService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001'
  _CARDID._serialized_start=75
  _CARDID._serialized_end=96
  _CARDIDS._serialized_start=98
  _CARDIDS._serialized_end=121
  _CARD._serialized_start=124
  _CARD._serialized_end=506
  _UPDATECARDSREQUEST._serialized_start=508
  _UPDATECARDSREQUEST._serialized_end=586
  _REMOVECARDSREQUEST._serialized_start=588
  _REMOVECARDSREQUEST._serialized_end=626
  _SETDECKREQUEST._serialized_start=628
  _SETDECKREQUEST._serialized_end=679
  _SETFLAGREQUEST._serialized_start=681
  _SETFLAGREQUEST._serialized_end=729
  _CARDSSERVICE._serialized_start=732
  _CARDSSERVICE._serialized_end=1090
# @@protoc_insertion_point(module_scope)
