# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'SpacecraftLink',
]

@pulumi.output_type
class SpacecraftLink(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "bandwidthMhz":
            suggest = "bandwidth_mhz"
        elif key == "centerFrequencyMhz":
            suggest = "center_frequency_mhz"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in SpacecraftLink. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        SpacecraftLink.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        SpacecraftLink.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 bandwidth_mhz: float,
                 center_frequency_mhz: float,
                 direction: str,
                 name: str,
                 polarization: str):
        """
        :param float bandwidth_mhz: Bandwidth in Mhz.
        :param float center_frequency_mhz: Center frequency in Mhz.
        :param str direction: Direction if the communication. Possible values are `Uplink` and `Downlink`.
        :param str name: Name of the link.
        :param str polarization: Polarization. Possible values are `RHCP`, `LHCP`, `linearVertical` and `linearHorizontal`.
        """
        pulumi.set(__self__, "bandwidth_mhz", bandwidth_mhz)
        pulumi.set(__self__, "center_frequency_mhz", center_frequency_mhz)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "polarization", polarization)

    @property
    @pulumi.getter(name="bandwidthMhz")
    def bandwidth_mhz(self) -> float:
        """
        Bandwidth in Mhz.
        """
        return pulumi.get(self, "bandwidth_mhz")

    @property
    @pulumi.getter(name="centerFrequencyMhz")
    def center_frequency_mhz(self) -> float:
        """
        Center frequency in Mhz.
        """
        return pulumi.get(self, "center_frequency_mhz")

    @property
    @pulumi.getter
    def direction(self) -> str:
        """
        Direction if the communication. Possible values are `Uplink` and `Downlink`.
        """
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the link.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def polarization(self) -> str:
        """
        Polarization. Possible values are `RHCP`, `LHCP`, `linearVertical` and `linearHorizontal`.
        """
        return pulumi.get(self, "polarization")


