{
  "swagger": "2.0",
  "info": {},
  "basePath": "/",
  "tags": [
    {
      "name": "componentadmin/v1"
    },
    {
      "name": "componentadmin/v2"
    }
  ],
  "paths": {
    "/componentadmin/v1/status/refresh": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Request all components to immediately refresh status (INTERNAL)",
        "description": "",
        "operationId": "refresh",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/componentadmin/v1/status": {
      "get": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Fetch status map (INTERNAL)",
        "description": "",
        "operationId": "getHostMap",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ConfigurationHostStatusWrapper-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          }
        }
      },
      "delete": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Clear component directory (INTERNAL)",
        "description": "",
        "operationId": "clearComponentDirectory",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/status": {
      "get": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Fetch status for specified component (INTERNAL)",
        "description": "",
        "operationId": "getInstanceStatusV1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of host to fetch status for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ConfigurationInstanceStatusWrapper-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          }
        }
      }
    },
    "/componentadmin/v1/host/{id}/status/refresh": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Request all components on specified host to immediately refresh status (INTERNAL)",
        "description": "",
        "operationId": "refreshHostStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of host to request update from",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/status/refresh": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Request specified component to immediately refresh status (INTERNAL)",
        "description": "",
        "operationId": "refreshInstanceStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of component to request update from",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/performance": {
      "get": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Fetch performance details from specified component (INTERNAL)",
        "description": "",
        "operationId": "getContainerPerformance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of instance to fetch performance data from",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/properties": {
      "post": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Fetch all properties from specified component (INTERNAL)",
        "description": "",
        "operationId": "getProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Component identity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ComponentIdentity"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/property/{property}": {
      "post": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Fetch property from runtime components (INTERNAL)",
        "description": "",
        "operationId": "getProperty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "property",
            "in": "path",
            "description": "Property to fetch",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Property fetch request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GetPropertyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-GetPropertyResult-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/task/{id}": {
      "get": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Fetch specified task (INTERNAL)",
        "description": "",
        "operationId": "getTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          }
        }
      }
    },
    "/componentadmin/v1/task": {
      "get": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "List current tasks for currentuser (INTERNAL)",
        "description": "",
        "operationId": "listTasks",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/componentadmin/v1/invoke": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Invoke operation (INTERNAL)",
        "description": "",
        "operationId": "call",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Invocation request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CallRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/lookup": {
      "post": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Lookup runtime components (INTERNAL)",
        "description": "",
        "operationId": "lookup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Lookup request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LookupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-LookupResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/host/{hostID}/installAll": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Install all defined configurations defined for this host (INTERNAL)",
        "description": "",
        "operationId": "installAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "description": "ID of host to install on",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ConfigurationInstance-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/host/{hostID}/cachedconfigurations/clear": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Clear all installed configurations on this host (INTERNAL)",
        "description": "",
        "operationId": "clearCachedConfigurations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "description": "ID of host to clear",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ConfigurationInstance-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/host/{hostID}/reboot": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Reboot host (INTERNAL)",
        "description": "",
        "operationId": "rebootHost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "description": "ID of host to reboot",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/reboot": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Reboot runtime instance (INTERNAL)",
        "description": "",
        "operationId": "rebootInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of instance to reboot",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/uninstall": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Uninstall configuration for instance (INTERNAL)",
        "description": "",
        "operationId": "uninstall",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of instance to uninstall",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentIdentity-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/install": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Install configuration for instance (INTERNAL)",
        "description": "",
        "operationId": "install",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of instance to install",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentIdentity-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/start": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Initiate runtime instance (INTERNAL)",
        "description": "",
        "operationId": "start",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of instance to start",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/instance/{id}/stop": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Shutdown runtime instance (INTERNAL)",
        "description": "",
        "operationId": "stop",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of instance to stop",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/host/{hostID}/container/{container}/persistence/{component}": {
      "delete": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Delete component persistence (INTERNAL)",
        "description": "",
        "operationId": "deleteComponentPersistence",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "description": "ID of host to clear persistence on",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "container",
            "in": "path",
            "description": "Name of container component belongs to",
            "required": true,
            "type": "string"
          },
          {
            "name": "component",
            "in": "path",
            "description": "Name of component to clear persistence for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentIdentity-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/host/{hostID}/persistence": {
      "get": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "List persistent components on host (INTERNAL)",
        "description": "",
        "operationId": "listPersistentComponents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "description": "ID of host to fetch list from",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentPersistenceResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v1/host/{hostID}/persistence/compact": {
      "put": {
        "tags": [
          "componentadmin/v1"
        ],
        "summary": "Initiate compacting of persistence database on host (INTERNAL)",
        "description": "",
        "operationId": "compactPersistence",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "description": "ID of host to fetch list from",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentTask-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "409": {
            "description": "Remote invocation failed"
          }
        }
      }
    },
    "/componentadmin/v2/status/instance": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Simple instance status search (INTERNAL)",
        "description": "",
        "operationId": "listInstanceStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "instanceState",
            "in": "query",
            "description": "Filter result by instance state",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "started",
                "missing"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results, or 0 for unlimited. Default is 25.",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip this number of results.",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-InstanceStatusResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/component": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "List component status (INTERNAL)",
        "description": "",
        "operationId": "listComponentStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentType",
            "in": "query",
            "description": "Component type",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results, or 0 for unlimited. Default is 25.",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip this number of results.",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentStatusResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/component/search": {
      "post": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Advanced component status search (INTERNAL)",
        "description": "",
        "operationId": "searchComponentStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ComponentStatusSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentStatusResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/component/{componentID}": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Fetch status for specified component (INTERNAL)",
        "description": "",
        "operationId": "getComponentStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "description": "Component ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-ComponentStatusResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/host/{host}": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Request status for specific host (INTERNAL)",
        "description": "",
        "operationId": "getHostStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "ID or name of host to request status for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-HostStatusResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/instance/{instanceID}": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Request status for specific instance (INTERNAL)",
        "description": "",
        "operationId": "getInstanceStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "instanceID",
            "in": "path",
            "description": "ID of instance to request status for",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-InstanceStatusResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Submit status update for a specific component. The host will be resolved by agent using the current user.The instanceID must be a valid instance for the current users host. (INTERNAL)",
        "description": "",
        "operationId": "updateInstanceStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "instanceID",
            "in": "path",
            "description": "ID of instance",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Status update request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InstanceStatusSubmissionRequest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/componentadmin/v2/status": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Request status overview (INTERNAL)",
        "description": "",
        "operationId": "getStatusOverview",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-StatusOverviewResponse-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Submit status update for a host which may also have running containers. The host will be resolved by agent using the current user. (INTERNAL)",
        "description": "",
        "operationId": "updateHostStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Status  update request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HostStatusSubmissionRequest"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          }
        }
      }
    },
    "/componentadmin/v2/status/host/search": {
      "post": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Advanced host status search (INTERNAL)",
        "description": "",
        "operationId": "searchHostStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HostStatusSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-HostStatusResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/instance/search": {
      "post": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Advanced instance status search (INTERNAL)",
        "description": "",
        "operationId": "searchInstanceStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search request object",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InstanceStatusSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-InstanceStatusResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/host/{host}/instances": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Request status for all instances on specified host (INTERNAL)",
        "description": "",
        "operationId": "getHostInstances",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "description": "ID or name of host to request instance status for",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results, or 0 for unlimited. Default is 25.",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip this number of results.",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-InstanceStatusResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/status/host": {
      "get": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "Simple host status search (INTERNAL)",
        "description": "",
        "operationId": "listHostStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "instanceState",
            "in": "query",
            "description": "Filter result by instance state",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "started",
                "missing"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hostState",
            "in": "query",
            "description": "Filter result by host state",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "started",
                "missing"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results, or 0 for unlimited. Default is 25.",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip this number of results.",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Specify sort ordering. Default is sort by name ascending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-HostStatusResponse-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/componentadmin/v2/instance/{id}/status": {
      "put": {
        "tags": [
          "componentadmin/v2"
        ],
        "summary": "null (INTERNAL)",
        "operationId": "updateInstanceStatus2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of instance",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Status update request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InstanceStatusSubmissionRequest"
            }
          }
        ],
        "deprecated": true,
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "InstanceOverview": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "running": {
          "type": "integer",
          "format": "int32"
        },
        "scheduledDowntime": {
          "type": "integer",
          "format": "int32"
        },
        "disabledMonitoring": {
          "type": "integer",
          "format": "int32"
        },
        "missing": {
          "type": "integer",
          "format": "int32"
        },
        "outdatedConfig": {
          "type": "integer",
          "format": "int32"
        },
        "outdatedRuntime": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Serializable": {
      "type": "object"
    },
    "HostStatusResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Host name"
        },
        "state": {
          "type": "string",
          "position": 0,
          "description": "Current state for host container",
          "enum": [
            "initializing",
            "started",
            "shuttingDown",
            "stopped",
            "missing"
          ]
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Host status flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime"
            ]
          }
        }
      }
    },
    "ResultStash-ConfigurationInstanceStatusWrapper-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/ConfigurationInstanceStatusWrapper"
        }
      }
    },
    "ResultStash-ConfigurationInstance-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/ConfigurationInstance"
          }
        }
      }
    },
    "InstalledContainerRequest": {
      "type": "object",
      "properties": {
        "instanceID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of installed instance"
        },
        "templateID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of template of installed instance"
        },
        "instanceRevision": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Revision of installed instance"
        },
        "templateRevision": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Revision of template of installed instance"
        }
      }
    },
    "ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "CodeArtifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "groupID": {
          "type": "string"
        },
        "artifactID": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "flags": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "UNUSED",
            "ACTIVE",
            "DELETED"
          ]
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "createdByUser": {
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedByUser": {
          "$ref": "#/definitions/UserInfo"
        },
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "ConfigurationInstanceInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "template": {
          "readOnly": true,
          "$ref": "#/definitions/ConfigurationTemplateInfo"
        },
        "host": {
          "readOnly": true,
          "$ref": "#/definitions/ConfigurationHostInfo"
        },
        "parent": {
          "readOnly": true,
          "$ref": "#/definitions/ConfigurationInstanceInfo"
        }
      }
    },
    "LookupRequest": {
      "type": "object",
      "properties": {
        "pattern": {
          "$ref": "#/definitions/ComponentIdentity"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ResultStash-StatusOverviewResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/StatusOverviewResponse"
        }
      }
    },
    "DomainInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "HostStatusSearchRequest": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "A set of keywords matched against hosts.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to hosts in one of these states.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "started",
              "missing"
            ]
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, include only results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, exclude all results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime"
            ]
          }
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criterias (by default applied using a logical OR, unless required/excluded is set).",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HostStatusSearchSubRequest"
          }
        },
        "instanceCriteria": {
          "type": "array",
          "position": 0,
          "description": "Filter hosts by instance status search criteria. Will filter hosts which contain the matching instances",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InstanceStatusSearchSubRequest"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Set this value to set max number of results. By default, result set size is 25. (default 25)",
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Set this value to skip the first (offset) objects. By default, return result from first object."
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Specify sort ordering for returned host status. Default is sort by host name. (default [name])",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "name",
              "-id",
              "-name"
            ]
          }
        }
      }
    },
    "ResultStash-ConfigurationHostStatusWrapper-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/ConfigurationHostStatusWrapper"
          }
        }
      }
    },
    "ConfigurationInstance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "scheduledDowntimeFrom": {
          "type": "integer",
          "format": "int64"
        },
        "scheduledDowntimeTo": {
          "type": "integer",
          "format": "int64"
        },
        "revision": {
          "type": "integer",
          "format": "int32"
        },
        "masterID": {
          "type": "integer",
          "format": "int32"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedByUser": {
          "$ref": "#/definitions/UserInfo"
        },
        "information": {
          "type": "string"
        },
        "codeProfile": {
          "$ref": "#/definitions/CodeProfile"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identifiers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "template": {
          "$ref": "#/definitions/ConfigurationTemplateInfo"
        },
        "parent": {
          "$ref": "#/definitions/ConfigurationInstanceInfo"
        },
        "host": {
          "$ref": "#/definitions/ConfigurationHostInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DELETED",
              "CONTROLLED_VERSION",
              "DISABLED_MONITORING"
            ]
          }
        }
      }
    },
    "ConfigurationTemplateInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "shortName": {
          "type": "string",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "mnemonic": {
          "type": "string"
        }
      }
    },
    "ResultStash-ComponentIdentity-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/ComponentIdentity"
          }
        }
      }
    },
    "CallRequest": {
      "type": "object",
      "required": [
        "method"
      ],
      "properties": {
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Serializable"
          }
        },
        "method": {
          "type": "string"
        },
        "pattern": {
          "$ref": "#/definitions/ComponentIdentity"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ResultStash-ComponentStatusResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/ComponentStatusResponse"
        }
      }
    },
    "ComponentStatusSearchRequest": {
      "type": "object",
      "properties": {
        "componentType": {
          "type": "string",
          "position": 0,
          "description": "Type of components to invoke"
        },
        "componentIdentifiers": {
          "type": "object",
          "position": 0,
          "description": "Identifiers of components to invoke",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Set this value to set max number of results. By default, result set size is 25. (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Set this value to skip the first (offset) objects. By default, return result from first object.",
          "minimum": 0
        }
      }
    },
    "ResultStash-ComponentStatusResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/ComponentStatusResponse"
          }
        }
      }
    },
    "InstanceStatusSubmissionRequest": {
      "type": "object",
      "required": [
        "components",
        "identifiers",
        "state"
      ],
      "properties": {
        "containerID": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the currently running container"
        },
        "identifiers": {
          "type": "object",
          "position": 0,
          "description": "Any identifiers for this instance container",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string",
          "position": 0,
          "description": "The state of this instance container",
          "enum": [
            "initializing",
            "started",
            "shuttingDown",
            "stopped"
          ]
        },
        "components": {
          "type": "array",
          "position": 0,
          "description": "An optional list of component updates for the root container",
          "items": {
            "$ref": "#/definitions/ComponentDescriptionSubmissionRequest"
          }
        },
        "instanceID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The instanceID of this container"
        },
        "runningInstanceRevision": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The instance revision of the running container"
        },
        "runningTemplateRevision": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The template revision of the running container"
        }
      }
    },
    "LookupResponse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "identity": {
          "$ref": "#/definitions/ComponentIdentity"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ComponentDescriptionSubmissionRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "The component UUID"
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "The component class type"
        },
        "interfaces": {
          "type": "array",
          "position": 0,
          "description": "Implementing interfaces",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "The component name"
        },
        "status": {
          "type": "string",
          "position": 0,
          "description": "The component status"
        }
      }
    },
    "ResultStash-ComponentPersistenceResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/ComponentPersistenceResponse"
          }
        }
      }
    },
    "ResultStash-LookupResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/LookupResponse"
          }
        }
      }
    },
    "GetPropertyRequest": {
      "type": "object",
      "properties": {
        "pattern": {
          "$ref": "#/definitions/ComponentIdentity"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ResultStash-InstanceStatusResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/InstanceStatusResponse"
          }
        }
      }
    },
    "ConfigurationHostStatusWrapper": {
      "type": "object",
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationInstanceStatusWrapper"
          }
        },
        "status": {
          "$ref": "#/definitions/ContainerStatusWrapper"
        },
        "hostID": {
          "type": "integer",
          "format": "int32"
        },
        "monitored": {
          "type": "boolean"
        },
        "inDowntime": {
          "type": "boolean"
        },
        "hostName": {
          "type": "string"
        }
      }
    },
    "ComponentStatusResponse": {
      "type": "object",
      "required": [
        "componentID",
        "componentType",
        "hostID",
        "timestamp"
      ],
      "properties": {
        "componentID": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of this component"
        },
        "containerID": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the container this component runs in"
        },
        "componentIdentifiers": {
          "type": "object",
          "position": 0,
          "description": "The identifiers set on this component",
          "additionalProperties": {
            "type": "string"
          }
        },
        "componentType": {
          "type": "string",
          "position": 0,
          "description": "The class name of this component"
        },
        "componentName": {
          "type": "string",
          "position": 0,
          "description": "The name of this component"
        },
        "hostID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The ID of the host this component belongs to"
        },
        "instanceID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The ID of the instance this component belongs to, or null if it belongs to the root container"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "The timestamp of the last status update for this component"
        },
        "status": {
          "type": "string",
          "position": 0,
          "description": "The last reported text status for this component"
        },
        "interfaces": {
          "type": "array",
          "position": 0,
          "description": "All interfaces implemented by this component",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StatusOverviewResponse": {
      "type": "object",
      "properties": {
        "hosts": {
          "$ref": "#/definitions/HostOverview"
        },
        "instances": {
          "$ref": "#/definitions/InstanceOverview"
        }
      }
    },
    "ResultStash-InstanceStatusResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/InstanceStatusResponse"
        }
      }
    },
    "CustomerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "domain": {
          "$ref": "#/definitions/DomainInfo"
        }
      }
    },
    "HostStatusSubmissionRequest": {
      "type": "object",
      "required": [
        "components",
        "containers",
        "identifiers",
        "installedContainers",
        "state"
      ],
      "properties": {
        "containerID": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the currently running container"
        },
        "identifiers": {
          "type": "object",
          "position": 0,
          "description": "Any identifiers for this instance container",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string",
          "position": 0,
          "description": "The state of this instance container",
          "enum": [
            "initializing",
            "started",
            "shuttingDown",
            "stopped"
          ]
        },
        "components": {
          "type": "array",
          "position": 0,
          "description": "An optional list of component updates for the root container",
          "items": {
            "$ref": "#/definitions/ComponentDescriptionSubmissionRequest"
          }
        },
        "containers": {
          "type": "array",
          "position": 0,
          "description": "A set of instance container status records",
          "items": {
            "$ref": "#/definitions/InstanceStatusSubmissionRequest"
          }
        },
        "installedContainers": {
          "type": "array",
          "position": 0,
          "description": "A set of installed instance descriptors",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InstalledContainerRequest"
          }
        }
      }
    },
    "InstanceStatusSearchRequest": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "A set of keywords matched against instances, or their template or host.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "host": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to instances for any of these hosts (by id or hostname).",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "template": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to instances of any of these templates (by id or shortname)",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to instances in one of these states.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "started",
              "missing"
            ]
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, include only results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime",
              "outdatedConfig",
              "outdatedRuntime"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, exclude all results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime",
              "outdatedConfig",
              "outdatedRuntime"
            ]
          }
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criterias (by default applied using a logical OR, unless required/excluded is set).",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InstanceStatusSearchSubRequest"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Set this value to set max number of results. By default, result set size is 25. (default 25)",
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Set this value to skip the first (offset) objects. By default, return result from first object."
        }
      }
    },
    "ResultStash-ComponentTask-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/ComponentTask"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "customer": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "domain": {
          "$ref": "#/definitions/DomainInfo"
        },
        "userName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ContainerStatusWrapper": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/ComponentIdentity"
        },
        "state": {
          "type": "string",
          "enum": [
            "NOT_STARTED",
            "INITIALIZING",
            "STARTED",
            "WARNING",
            "STOPPING",
            "STOPPED",
            "FAILED"
          ]
        }
      }
    },
    "CodeProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "flags": {
          "type": "integer",
          "format": "int64"
        },
        "created": {
          "type": "integer",
          "format": "int64"
        },
        "createdByUser": {
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedByUser": {
          "$ref": "#/definitions/UserInfo"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeArtifact"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "finalized": {
          "type": "boolean"
        }
      }
    },
    "InstanceStatusSearchSubRequest": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "A set of keywords matched against instances, or their template or host.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "host": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to instances for any of these hosts (by id or hostname).",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "template": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to instances of any of these templates (by id or shortname)",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to instances in one of these states.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "started",
              "missing"
            ]
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, include only results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime",
              "outdatedConfig",
              "outdatedRuntime"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, exclude all results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime",
              "outdatedConfig",
              "outdatedRuntime"
            ]
          }
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criterias (by default applied using a logical OR, unless required/excluded is set).",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InstanceStatusSearchSubRequest"
          }
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "If set to true, objects matching this subcriteria object will be excluded."
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
        }
      }
    },
    "ResultStash-GetPropertyResult-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/GetPropertyResult"
          }
        }
      }
    },
    "ConfigurationInstanceStatusWrapper": {
      "type": "object",
      "properties": {
        "installedInstanceRevision": {
          "type": "integer",
          "format": "int32"
        },
        "installedTemplateRevision": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/ContainerStatusWrapper"
        },
        "instanceID": {
          "type": "integer",
          "format": "int32"
        },
        "templateID": {
          "type": "integer",
          "format": "int32"
        },
        "templateName": {
          "type": "string"
        },
        "monitored": {
          "type": "boolean"
        },
        "inDowntime": {
          "type": "boolean"
        }
      }
    },
    "ComponentTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "RUNNING",
            "DONE",
            "EXCEPTION",
            "TIMEOUT"
          ]
        },
        "target": {
          "$ref": "#/definitions/ComponentIdentity"
        },
        "method": {
          "type": "string"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Serializable"
          }
        },
        "result": {
          "$ref": "#/definitions/Serializable"
        },
        "started": {
          "type": "integer",
          "format": "int64"
        },
        "finished": {
          "type": "integer",
          "format": "int64"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentTask"
          }
        }
      }
    },
    "ResultStash-ComponentTask-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/ComponentTask"
          }
        }
      }
    },
    "ComponentIdentity": {
      "type": "object",
      "properties": {
        "exact": {
          "type": "boolean"
        },
        "identifiers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the comment was added."
        },
        "user": {
          "position": 0,
          "description": "Who added the comment.",
          "$ref": "#/definitions/UserInfo"
        },
        "comment": {
          "type": "string",
          "position": 0,
          "description": "The comment's text."
        }
      }
    },
    "ConfigurationHostInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "agentUserID": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "ResultStash-HostStatusResponse-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/HostStatusResponse"
          }
        }
      }
    },
    "HostStatusSearchSubRequest": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "A set of keywords matched against hosts.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "array",
          "position": 0,
          "description": "If set, limit result to hosts in one of these states.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "started",
              "missing"
            ]
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, include only results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "If set, exclude all results where all these flags are set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime"
            ]
          }
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criterias (by default applied using a logical OR, unless required/excluded is set).",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HostStatusSearchSubRequest"
          }
        },
        "instanceCriteria": {
          "type": "array",
          "position": 0,
          "description": "Filter hosts by instance status search criteria. Will filter hosts which contain the matching instances",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InstanceStatusSearchSubRequest"
          }
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "If set to true, objects matching this subcriteria object will be excluded."
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
        }
      }
    },
    "ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InstanceStatusResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object."
        },
        "host": {
          "position": 0,
          "description": "Host this instance is running on",
          "$ref": "#/definitions/HostInfo"
        },
        "template": {
          "position": 0,
          "description": "The configuration template this instance is based on",
          "$ref": "#/definitions/TemplateInfo"
        },
        "parentID": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "If set, this instance is run as a child of the instance with this ID"
        },
        "state": {
          "type": "string",
          "position": 0,
          "description": "Current state for instance container",
          "enum": [
            "initializing",
            "started",
            "shuttingDown",
            "stopped",
            "missing"
          ]
        },
        "identifiers": {
          "type": "object",
          "position": 0,
          "description": "Container identifier properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Instance status flags",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "monitoringDisabled",
              "inDowntime",
              "installedConfig",
              "outdatedConfig",
              "outdatedRuntime"
            ]
          }
        }
      }
    },
    "TemplateInfo": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object.",
          "readOnly": true
        }
      }
    },
    "HostOverview": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "missing": {
          "type": "integer",
          "format": "int32"
        },
        "running": {
          "type": "integer",
          "format": "int32"
        },
        "scheduledDowntime": {
          "type": "integer",
          "format": "int32"
        },
        "disabledMonitoring": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResultStash-HostStatusResponse-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/HostStatusResponse"
        }
      }
    },
    "GetPropertyResult": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/ComponentIdentity"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "ResultStash-ComponentIdentity-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/ComponentIdentity"
        }
      }
    },
    "HostInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "ID of the response object.",
          "readOnly": true
        }
      }
    },
    "ComponentPersistenceResponse": {
      "type": "object",
      "properties": {
        "hostID": {
          "type": "integer",
          "format": "int32"
        },
        "containerName": {
          "type": "string"
        },
        "componentName": {
          "type": "string"
        }
      }
    }
  }
}