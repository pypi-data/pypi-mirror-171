"""Autogenerated API schema"""
from argus_api import session


create_artifact = {'tags': ['/configurationadmin'], 'summary': 'Add new code artifact (INTERNAL)', 'description': '', 'operationId': 'createArtifact', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Create request', 'required': False, 'schema': {'type': 'object', 'required': ['artifactID', 'data', 'groupID', 'version'], 'properties': {'groupID': {'type': 'str', 'description': '[a-zA-Z0-9_\\-\\.]*'}, 'artifactID': {'type': 'str', 'description': '[a-zA-Z0-9_\\-\\.]*'}, 'version': {'type': 'str', 'description': '[a-zA-Z0-9_\\-\\.]*'}, 'data': {'type': 'str', 'minLength': 10, 'maxLength': 2147483647}}}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
create_artifact_from_octet_stream = {'tags': ['/configurationadmin'], 'summary': 'Add new code artifact (INTERNAL)', 'description': '', 'operationId': 'createArtifactFromOctetStream', 'consumes': ['application/octet-stream'], 'produces': ['application/json'], 'parameters': [{'name': 'groupID', 'in': 'path', 'description': 'Group ID', 'required': True, 'type': 'str'}, {'name': 'artifactID', 'in': 'path', 'description': 'Artifact ID', 'required': True, 'type': 'str'}, {'name': 'version', 'in': 'path', 'description': 'Version', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Artifact data', 'required': False, 'schema': {'type': 'string'}}], 'responses': {'201': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
delete_unused_artifacts = {'tags': ['/configurationadmin'], 'summary': 'Mark unused artifacts as deleted (INTERNAL)', 'description': '', 'operationId': 'deleteUnusedArtifacts', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
download_code_artifact_by_gav = {'tags': ['/configurationadmin'], 'summary': 'Download artifact by groupID, artifactID and version (GAV) (INTERNAL)', 'description': '', 'operationId': 'downloadCodeArtifactByGAV', 'produces': ['application/octet-stream'], 'parameters': [{'name': 'groupID', 'in': 'path', 'description': 'GroupID of artifact to fetch', 'required': True, 'type': 'str'}, {'name': 'artifactID', 'in': 'path', 'description': 'ArtifactID of artifact to fetch', 'required': True, 'type': 'str'}, {'name': 'version', 'in': 'path', 'description': 'Version of artifact to fetch', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
download_code_artifact_by_id = {'tags': ['/configurationadmin'], 'summary': 'Download artifact by ID (INTERNAL)', 'description': '', 'operationId': 'downloadCodeArtifactByID', 'produces': ['application/octet-stream'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of artifact to fetch', 'required': True, 'type': 'str'}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_code_artifact_by_gav = {'tags': ['/configurationadmin'], 'summary': 'Fetch code artifact by groupID, artifactID and version (GAV) (INTERNAL)', 'description': '', 'operationId': 'getCodeArtifactByGAV', 'produces': ['application/json'], 'parameters': [{'name': 'groupID', 'in': 'path', 'description': 'GroupID of artifact to fetch', 'required': True, 'type': 'str'}, {'name': 'artifactID', 'in': 'path', 'description': 'ArtifactID of artifact to fetch', 'required': True, 'type': 'str'}, {'name': 'version', 'in': 'path', 'description': 'Version of artifact to fetch', 'required': True, 'type': 'str'}, {'name': 'includeData', 'in': 'query', 'description': 'If true, include encoded artifact binary data', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_code_artifcat_by_id = {'tags': ['/configurationadmin'], 'summary': 'Fetch code artifact by hash ID (INTERNAL)', 'description': '', 'operationId': 'getCodeArtifcatByID', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of artifact to fetch', 'required': True, 'type': 'str'}, {'name': 'includeData', 'in': 'query', 'description': 'If true, include encoded artifact binary data', 'required': False, 'type': 'bool', 'default': False}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_code_artifacts = {'tags': ['/configurationadmin'], 'summary': 'List code artifacts (INTERNAL)', 'description': '', 'operationId': 'listCodeArtifacts', 'produces': ['application/json'], 'parameters': [{'name': 'search', 'in': 'query', 'description': 'Limit result to artifacts matching this search string', 'required': False, 'type': 'str'}, {'name': 'limit', 'in': 'query', 'description': 'Limit result', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Offset result', 'required': False, 'type': 'int', 'default': 0}, {'name': 'orderBy', 'in': 'query', 'description': 'Order result', 'required': False, 'type': 'str', 'default': 'groupID', 'enum': ['id', 'groupID', 'artifactID', 'version', 'created', 'lastUpdated', 'status', 'length']}, {'name': 'orderDesc', 'in': 'query', 'description': 'Sort results descending', 'required': False, 'type': 'bool'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_unused_code_artifacts = {'tags': ['/configurationadmin'], 'summary': 'List unused artifact (INTERNAL)', 'description': '', 'operationId': 'listUnusedCodeArtifacts', 'produces': ['application/json'], 'parameters': [], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
search_code_artifacts = {'tags': ['/configurationadmin'], 'summary': 'Search code artifacts (INTERNAL)', 'description': '', 'operationId': 'searchCodeArtifacts', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'in': 'body', 'name': 'body', 'description': 'Search criteria', 'required': False, 'schema': {'type': 'object', 'properties': {'searchString': {'type': 'string'}, 'id': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'groupID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'artifactID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'version': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'status': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}}, 'gav': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}}}}, 'includeData': {'type': 'boolean'}, 'includeCreatedTimestamp': {'type': 'boolean'}, 'includeLastUpdatedTimestamp': {'type': 'boolean'}, 'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'position': 0, 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'position': 0, 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR.', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'searchString': {'type': 'string'}, 'id': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'groupID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'artifactID': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'version': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'string'}}, 'status': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}}, 'gav': {'type': 'list', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}}}}, 'includeData': {'type': 'boolean'}, 'includeCreatedTimestamp': {'type': 'boolean'}, 'includeLastUpdatedTimestamp': {'type': 'boolean'}, 'limit': {'type': 'int', 'position': 0, 'description': 'Max number of results.'}, 'offset': {'type': 'int', 'position': 0, 'description': 'Skip the first (offset) objects. By default, return result from first object.'}, 'includeDeleted': {'type': 'bool', 'position': 0, 'description': 'Set to true to include deleted objects. By default, exclude deleted objects.'}, 'includeFlags': {'type': 'int', 'position': 0, 'description': 'Only include objects which have includeFlags set.'}, 'excludeFlags': {'type': 'int', 'position': 0, 'description': 'Exclude objects which have excludeFlags set.'}, 'subCriteria': {'type': 'list', 'position': 0, 'description': 'Set additional criterias which are applied using a logical OR.', 'uniqueItems': True, 'items': []}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ'}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'enum': ['id', 'groupID', 'artifactID', 'version', 'created', 'lastUpdated', 'status', 'length', '-id', '-groupID', '-artifactID', '-version', '-created', '-lastUpdated', '-status', '-length']}}}}}, 'exclude': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded.'}, 'required': {'type': 'bool', 'position': 0, 'description': 'Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria).'}, 'startTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data after this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ'}, 'endTimestamp': {'type': 'str', 'position': 0, 'description': 'Restrict search to data before this time (epoch millis) according to selected TimeFieldStrategies. Allows unix timestamp (milliseconds), ISO timestamp, or relative time specifies. See https://docs.mnemonic.no/x/AQDXAQ'}, 'sortBy': {'type': 'list', 'position': 0, 'description': 'List of properties to sort by (prefix with "-" to sort descending).', 'items': {'type': 'str', 'enum': ['id', 'groupID', 'artifactID', 'version', 'created', 'lastUpdated', 'status', 'length', '-id', '-groupID', '-artifactID', '-version', '-created', '-lastUpdated', '-status', '-length']}}}}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
#: "create" is an alias for "create_artifact"
create = create_artifact
#: "create_from_octet_stream" is an alias for "create_artifact_from_octet_stream"
create_from_octet_stream = create_artifact_from_octet_stream
#: "delete_unused" is an alias for "delete_unused_artifacts"
delete_unused = delete_unused_artifacts
#: "download_by_g_a_v" is an alias for "download_code_artifact_by_gav"
download_by_g_a_v = download_code_artifact_by_gav
#: "download_by_id" is an alias for "download_code_artifact_by_id"
download_by_id = download_code_artifact_by_id
#: "get_by_g_a_v" is an alias for "get_code_artifact_by_gav"
get_by_g_a_v = get_code_artifact_by_gav
#: "get_code_artifact_by_g_a_v" is an alias for "get_code_artifact_by_gav"
get_code_artifact_by_g_a_v = get_code_artifact_by_gav
#: "download_code_artifact_by_g_a_v" is an alias for "download_code_artifact_by_gav"
download_code_artifact_by_g_a_v = download_code_artifact_by_gav
#: "get_by_id" is an alias for "get_code_artifcat_by_id"
get_by_id = get_code_artifcat_by_id
#: "list" is an alias for "list_code_artifacts"
list = list_code_artifacts
#: "list_unused" is an alias for "list_unused_code_artifacts"
list_unused = list_unused_code_artifacts
#: "search" is an alias for "search_code_artifacts"
search = search_code_artifacts