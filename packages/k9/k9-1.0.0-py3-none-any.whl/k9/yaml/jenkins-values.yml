clusterZone: jenkins.{{baseDomain}}
controller:
  tag: "lts"
  jenkinsUrl: "https://jenkins.{{baseDomain}}"
  imagePullPolicy: "IfNotPresent"
  admin:
    existingSecret: "jenkins"
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password
  healthProbes: true
  probes:
    startupProbe:
      httpGet:
        path: '/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 12
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: '/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 10
      initialDelaySeconds: 60
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: '/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      initialDelaySeconds: 60
  JCasC:
    defaultConfig: true
    configScripts: {}
    securityRealm: |-
      local:
        allowsSignup: false
        enableCaptcha: false
        users:
        - id: "${chart-admin-username}"
          name: "Jenkins Admin"
          password: "${chart-admin-password}"
    authorizationStrategy: |-
      loggedInUsersCanDoAnything:
        allowAnonymousRead: false
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/group.name: {{clusterName}}-ingress-group
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: {{certArn}}
    hostName: jenkins.{{baseDomain}}
    tls:
    - hosts:
      - jenkins.{{baseDomain}}
  # adminPassword: {{jenkinsPass}}
  installPlugins:
  - configuration-as-code:1429.v09b_044a_c93de
  - ace-editor:1.1
  - junit:1.63
  - javadoc:217.v905b_86277a_2a_
  - pipeline-model-api:2.2114.v2654ca_721309
  - kubernetes:3580.v78271e5631dc
  - workflow-job:1189.va_d37a_e9e4eda_
  - workflow-aggregator:581.v0c46fa_697ffd
  - workflow-multibranch:716.vc692a_e52371b_
  - credentials-binding:523.vd859a_4b_122e6
  - git:4.11.3
  - gradle:1.38
  - nodejs:1.5.1
  - github:1.34.3
  - gitlab-plugin:1.5.33
  - ssh-slaves:1.814.vc82988f54b_10
  - email-ext:2.88
  - sonar:2.14
  - discard-old-build:1.05
  - external-monitor-job:191.v363d0d1efdf8
  - aws-credentials:191.vcb_f183ce58b_9
  - prometheus:2.0.11
  - custom-tools-plugin:0.8
  - pipeline-github-lib:38.v445716ea_edda_
  - pipeline-stage-view:2.24
  - robot:3.1.0
  - github-branch-source:1637.vd833b_7ca_7654
  - anchore-container-scanner:1.0.23
  - aws-bucket-credentials:1.0.0
  - ant:475.vf34069fef73c
  - build-timeout:1.21
  - ldap:2.10
  - pam-auth:1.8
  - oauth-credentials:0.5
  - pipeline-aws:1.43
  - resource-disposer:0.19
  - run-condition:1.5
  - slack:608.v19e3b_44b_b_9ff
  - timestamper:1.17
  - ws-cleanup:0.42
  - job-dsl:1.79
  - google-chat-notification:1.4
  installLatestPlugins: true
  installLatestSpecifiedPlugins: true
  initializeOnce: true
persistence:
  volumes:
  - name: awscli
    hostPath:
      type: DirectoryOrCreate
      path: /mount/awscli
  mounts:
  - mountPath: /awscli
    name: awscli
agent:
  jenkinsUrl: http://jenkins:8080
  jenkinsTunnel: jenkins-agent:50000
  namespace: cicd
  customJenkinsLabels: ['dind']
  podName: "dind"
  yamlTemplate: |-
    apiVersion: v1
    kind: Pod
    metadata:
      labels:
        some-label: dind
    spec:
      containers:
      - name: dind
        image: simoncomputing/dind-aws-agent:2021-03-01
        tty: true
        securityContext:
          privileged: true
        volumeMounts:
          - name: docker-graph-storage
            mountPath: /var/lib/docker
      - name: aws-agent
        image: simoncomputing/aws-agent:latest
        tty: true
        securityContext:
          privileged: true
        volumeMounts:
          - name: docker-graph-storage
            mountPath: /var/lib/docker
      volumes:
      - name: docker-graph-storage
        emptyDir: {}
  resources:
    requests:
      cpu: "512m"
      memory: "1024Mi"
    limits:
      cpu: "512m"
      memory: "1024Mi"
additionalAgents:
  react:
    podName: react-agent
    customJenkinsLabels: react-agent
    nodeUsageMode: 'EXCLUSIVE'
    yamlTemplate: |-
      apiVersion: v1
      kind: Pod
      metadata:
        labels:
          some-label: react-agent
      spec:
        containers:
        - name: jnlp
          image: simoncomputing/sc-jenkins-agent:2021-03-17
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: dind
          image: simoncomputing/dind-aws-agent:2021-03-01
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: react-agent
          image: simoncomputing/react-agent:2021-10-14
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: react-agent-2022-04-27
          image: simoncomputing/react-agent:2022-04-27
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: aws-agent
          image: simoncomputing/aws-agent:2020-08-14
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        volumes:
        - name: docker-graph-storage
          emptyDir: {}
  
  react2:
    podName: react-agent2
    customJenkinsLabels: react-agent2
    nodeUsageMode: 'EXCLUSIVE'
    yamlTemplate: |-
      apiVersion: v1
      kind: Pod
      metadata:
        labels:
          some-label: react-agent2
      spec:
        containers:
        - name: jnlp
          image: simoncomputing/sc-jenkins-agent:2021-03-17
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: dind
          image: simoncomputing/dind-aws-agent:2021-03-01
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: react-agent2
          image: simoncomputing/react-agent:2020-07-15
          imagePullPolicy: Always
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: aws-agent
          image: simoncomputing/aws-agent:2020-07-15
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        volumes:
        - name: docker-graph-storage
          emptyDir: {}

  python:
    podName: python-agent
    customJenkinsLabels: python-agent
    nodeUsageMode: 'EXCLUSIVE'
    yamlTemplate: |-
      apiVersion: v1
      kind: Pod
      metadata:
        labels:
          some-label: python-agent
      spec:
        containers:
        - name: dind
          image: simoncomputing/dind-aws-agent:2021-03-01
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: python-agent
          image: simoncomputing/python-agent:latest
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: python-agent-k9
          image: simoncomputing/python-agent:k8s-2020-10-27
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: aws-agent
          image: simoncomputing/aws-agent:latest
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        volumes:
        - name: docker-graph-storage
          emptyDir: {}

  openjdk14:
    podName: openjdk14
    customJenkinsLabels: openjdk
    nodeUsageMode: 'EXCLUSIVE'
    yamlTemplate: |-
      apiVersion: v1
      kind: Pod
      metadata:
        labels:
          some-label: openjdk
      spec:
        containers:
        - name: dind
          image: simoncomputing/dind-aws-agent:2021-03-01
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: jdk-agent
          image: openjdk:14.0.2-slim-buster
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        - name: aws-agent
          image: simoncomputing/aws-agent:2020-08-14
          tty: true
          securityContext:
            privileged: true
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
        volumes:
        - name: docker-graph-storage
          emptyDir: {}