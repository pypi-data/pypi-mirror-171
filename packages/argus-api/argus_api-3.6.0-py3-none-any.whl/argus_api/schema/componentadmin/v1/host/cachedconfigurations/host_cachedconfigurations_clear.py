"""Autogenerated API schema"""
from argus_api import session


clear_cached_configurations = {'tags': ['componentadmin/v1'], 'summary': 'Clear all installed configurations on this host (INTERNAL)', 'description': '', 'operationId': 'clearCachedConfigurations', 'produces': ['application/json'], 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to clear', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'scheduledDowntimeFrom': {'type': 'int'}, 'scheduledDowntimeTo': {'type': 'int'}, 'revision': {'type': 'int'}, 'masterID': {'type': 'int'}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'information': {'type': 'string'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'flags': {'type': 'int'}, 'created': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'artifacts': {'type': 'list', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}}}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'mnemonic': {'type': 'string'}}}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'mnemonic': {'type': 'string'}}}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}}}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'mnemonic': {'type': 'string'}}}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}}}, 'parent': []}}}}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '409': {'description': 'Remote invocation failed'}}}
compact_persistence = {'tags': ['componentadmin/v1'], 'summary': 'Initiate compacting of persistence database on host (INTERNAL)', 'description': '', 'operationId': 'compactPersistence', 'produces': ['application/json'], 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to fetch list from', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'state': {'type': 'str', 'enum': ['RUNNING', 'DONE', 'EXCEPTION', 'TIMEOUT']}, 'target': {'type': 'dict', 'properties': {'exact': {'type': 'boolean'}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'string'}}}}, 'method': {'type': 'string'}, 'arguments': {'type': 'list', 'items': {'type': 'object'}}, 'result': {'type': 'object'}, 'started': {'type': 'int'}, 'finished': {'type': 'int'}, 'children': {'type': 'list', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'state': {'type': 'str', 'enum': ['RUNNING', 'DONE', 'EXCEPTION', 'TIMEOUT']}, 'target': {'type': 'dict', 'properties': {'exact': {'type': 'boolean'}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'string'}}}}, 'method': {'type': 'string'}, 'arguments': {'type': 'list', 'items': {'type': 'object'}}, 'result': {'type': 'object'}, 'started': {'type': 'int'}, 'finished': {'type': 'int'}, 'children': {'type': 'list', 'items': []}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '409': {'description': 'Remote invocation failed'}}}
delete_component_persistence = {'tags': ['componentadmin/v1'], 'summary': 'Delete component persistence (INTERNAL)', 'description': '', 'operationId': 'deleteComponentPersistence', 'produces': ['application/json'], 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to clear persistence on', 'required': True, 'type': 'int'}, {'name': 'container', 'in': 'path', 'description': 'Name of container component belongs to', 'required': True, 'type': 'str'}, {'name': 'component', 'in': 'path', 'description': 'Name of component to clear persistence for', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'exact': {'type': 'boolean'}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'string'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '409': {'description': 'Remote invocation failed'}}}
install_all = {'tags': ['componentadmin/v1'], 'summary': 'Install all defined configurations defined for this host (INTERNAL)', 'description': '', 'operationId': 'installAll', 'produces': ['application/json'], 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to install on', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'scheduledDowntimeFrom': {'type': 'int'}, 'scheduledDowntimeTo': {'type': 'int'}, 'revision': {'type': 'int'}, 'masterID': {'type': 'int'}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'information': {'type': 'string'}, 'codeProfile': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'flags': {'type': 'int'}, 'created': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedTimestamp': {'type': 'int'}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'artifacts': {'type': 'list', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'groupID': {'type': 'string'}, 'artifactID': {'type': 'string'}, 'version': {'type': 'string'}, 'flags': {'type': 'int'}, 'status': {'type': 'str', 'enum': ['UNUSED', 'ACTIVE', 'DELETED']}, 'createdTimestamp': {'type': 'int'}, 'lastUpdatedTimestamp': {'type': 'int'}, 'createdByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'lastUpdatedByUser': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'length': {'type': 'int'}, 'data': {'type': 'string'}}}}, 'deleted': {'type': 'boolean'}, 'finalized': {'type': 'boolean'}}}, 'properties': {'type': 'dict', 'additionalProperties': {'type': 'string'}}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'string'}}, 'comments': {'type': 'list', 'items': {'type': 'dict', 'properties': {'timestamp': {'type': 'int', 'position': 0, 'description': 'When the comment was added.'}, 'user': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}, 'shortName': {'type': 'string'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}}}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int'}, 'name': {'type': 'string'}}}, 'userName': {'type': 'string'}, 'name': {'type': 'string'}, 'customerID': {'type': 'int'}}}, 'comment': {'type': 'str', 'position': 0, 'description': "The comment's text."}}}}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'mnemonic': {'type': 'string'}}}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'mnemonic': {'type': 'string'}}}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}}}, 'parent': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'template': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'shortName': {'type': 'str', 'readOnly': True}, 'revision': {'type': 'int', 'readOnly': True}, 'mnemonic': {'type': 'string'}}}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}}}, 'parent': []}}}}, 'host': {'type': 'dict', 'properties': {'id': {'type': 'int', 'readOnly': True}, 'name': {'type': 'str', 'readOnly': True}, 'agentUserID': {'type': 'int', 'readOnly': True}}}, 'flags': {'type': 'list', 'position': 0, 'description': 'Flags assigned to the object.', 'uniqueItems': True, 'items': {'type': 'str', 'enum': ['DELETED', 'CONTROLLED_VERSION', 'DISABLED_MONITORING']}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '409': {'description': 'Remote invocation failed'}}}
list_persistent_components = {'tags': ['componentadmin/v1'], 'summary': 'List persistent components on host (INTERNAL)', 'description': '', 'operationId': 'listPersistentComponents', 'produces': ['application/json'], 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to fetch list from', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'hostID': {'type': 'int'}, 'containerName': {'type': 'string'}, 'componentName': {'type': 'string'}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '409': {'description': 'Remote invocation failed'}}}
reboot_host = {'tags': ['componentadmin/v1'], 'summary': 'Reboot host (INTERNAL)', 'description': '', 'operationId': 'rebootHost', 'produces': ['application/json'], 'parameters': [{'name': 'hostID', 'in': 'path', 'description': 'ID of host to reboot', 'required': True, 'type': 'int'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'state': {'type': 'str', 'enum': ['RUNNING', 'DONE', 'EXCEPTION', 'TIMEOUT']}, 'target': {'type': 'dict', 'properties': {'exact': {'type': 'boolean'}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'string'}}}}, 'method': {'type': 'string'}, 'arguments': {'type': 'list', 'items': {'type': 'object'}}, 'result': {'type': 'object'}, 'started': {'type': 'int'}, 'finished': {'type': 'int'}, 'children': {'type': 'list', 'items': {'type': 'dict', 'properties': {'id': {'type': 'string'}, 'state': {'type': 'str', 'enum': ['RUNNING', 'DONE', 'EXCEPTION', 'TIMEOUT']}, 'target': {'type': 'dict', 'properties': {'exact': {'type': 'boolean'}, 'identifiers': {'type': 'dict', 'additionalProperties': {'type': 'string'}}}}, 'method': {'type': 'string'}, 'arguments': {'type': 'list', 'items': {'type': 'object'}}, 'result': {'type': 'object'}, 'started': {'type': 'int'}, 'finished': {'type': 'int'}, 'children': {'type': 'list', 'items': []}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '409': {'description': 'Remote invocation failed'}}}
refresh_host_status = {'tags': ['componentadmin/v1'], 'summary': 'Request all components on specified host to immediately refresh status (INTERNAL)', 'description': '', 'operationId': 'refreshHostStatus', 'produces': ['application/json'], 'parameters': [{'name': 'id', 'in': 'path', 'description': 'ID of host to request update from', 'required': True, 'type': 'int'}], 'responses': {'401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '409': {'description': 'Remote invocation failed'}}}
#: "reboot" is an alias for "reboot_host"
reboot = reboot_host