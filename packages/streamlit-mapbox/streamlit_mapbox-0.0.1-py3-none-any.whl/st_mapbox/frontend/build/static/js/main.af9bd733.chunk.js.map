{"version":3,"sources":["MapboxComponent.tsx","index.tsx"],"names":["MapboxComponent","state","numClicks","isFocused","render","name","props","args","theme","style","borderStyling","primaryColor","border","outline","onClick","onClicked","disabled","onFocus","_onFocus","onBlur","_onBlur","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQAgBMA,EAAe,iKAgElB,OAhEkB,oCACZC,MAAQ,CAAEC,UAAW,EAAGC,WAAW,GAAO,EAE1CC,OAAS,WAGd,IAAMC,EAAO,EAAKC,MAAMC,KAAW,KAK3BC,EAAU,EAAKF,MAAfE,MACFC,EAA6B,GAInC,GAAID,EAAO,CAGT,IAAME,EAAa,oBACjB,EAAKT,MAAME,UAAYK,EAAMG,aAAe,QAE9CF,EAAMG,OAASF,EACfD,EAAMI,QAAUH,EAOlB,OACE,wCACUL,EAAI,SACZ,4BACEI,MAAOA,EACPK,QAAS,EAAKC,UACdC,SAAU,EAAKV,MAAMU,SACrBC,QAAS,EAAKC,SACdC,OAAQ,EAAKC,SAAQ,eAM5B,EAGOL,UAAY,WAGlB,EAAKM,UACH,SAACC,GAAS,MAAM,CAAEpB,UAAWoB,EAAUpB,UAAY,MACnD,kBAAMqB,IAAUC,kBAAkB,EAAKvB,MAAMC,eAEhD,EAGOgB,SAAW,WACjB,EAAKG,SAAS,CAAElB,WAAW,KAC5B,EAGOiB,QAAU,WAChB,EAAKC,SAAS,CAAElB,WAAW,KAC5B,wBAhEkB,CAASsB,KAwEfC,cAAwB1B,GCpFvC2B,IAASvB,OACP,kBAAC,IAAMwB,WAAU,KACf,kBAAC,EAAe,OAElBC,SAASC,eAAe,W","file":"static/js/main.af9bd733.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass MapboxComponent extends StreamlitComponentBase<State> {\n  public state = { numClicks: 0, isFocused: false }\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n    const name = this.props.args[\"name\"]\n\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n\n    // Maintain compatibility with older versions of Streamlit that don't send\n    // a theme object.\n    if (theme) {\n      // Use the theme object to style our button border. Alternatively, the\n      // theme style is defined in CSS vars.\n      const borderStyling = `1px solid ${\n        this.state.isFocused ? theme.primaryColor : \"gray\"\n      }`\n      style.border = borderStyling\n      style.outline = borderStyling\n    }\n\n    // Show a button and some text.\n    // When the button is clicked, we'll increment our \"numClicks\" state\n    // variable, and send its new value back to Streamlit, where it'll\n    // be available to the Python program.\n    return (\n      <span>\n        Hello, {name}! &nbsp;\n        <button\n          style={style}\n          onClick={this.onClicked}\n          disabled={this.props.disabled}\n          onFocus={this._onFocus}\n          onBlur={this._onBlur}\n        >\n          Click Me!\n        </button>\n      </span>\n    )\n  }\n\n  /** Click handler for our \"Click Me!\" button. */\n  private onClicked = (): void => {\n    // Increment state.numClicks, and pass the new value back to\n    // Streamlit via `Streamlit.setComponentValue`.\n    this.setState(\n      (prevState) => ({ numClicks: prevState.numClicks + 1 }),\n      () => Streamlit.setComponentValue(this.state.numClicks)\n    )\n  }\n\n  /** Focus handler for our \"Click Me!\" button. */\n  private _onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  /** Blur handler for our \"Click Me!\" button. */\n  private _onBlur = (): void => {\n    this.setState({ isFocused: false })\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(MapboxComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MapboxComponent from \"./MapboxComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MapboxComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}