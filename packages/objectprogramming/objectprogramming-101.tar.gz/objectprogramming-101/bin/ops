#!/usr/bin/env python3
# This file is placed in the Public Domain.
# pylint: disable=C0115,C0116,R0201,C0413


"object programming shell"


import importlib
import os
import readline
import sys
import termios
import time


sys.path.insert(0, os.getcwd())


from op import Wd, launch
from op.run import Event, Handler, Shell, scan, scandir


from opm import cmds


Wd.workdir = os.path.expanduser("~/.op")


starttime = time.time()

class CLI(Handler):

    def raw(self, txt):
        print(txt)


cli = CLI()



class Shell(Handler):

    def loop(self):
        while 1:
            self.handle(self.poll())

    def poll(self):
        event = Event()
        event.bot = self
        event.txt = input("> ")
        event.orig = repr(self)
        return event

    def raw(self, txt):
        print(txt)

    def start(self):
        launch(self.loop)

    def wait(self):
        while 1:
            time.sleep(1.0)


shl = Shell()


def importer(packagename, modulename):
    name = "%s.%s" % (packagename, modulename)
    try:
        mod = importlib.import_module(name, packagename)
        scan(shl, mod)
    except ModuleNotFoundError:
        pass


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    readline.redisplay()
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)


def main():
    scandir("mod", importer)
    scan(shl, cmds)
    shl.start()
    shl.wait()


if __name__ == "__main__":
    wrap(main)
