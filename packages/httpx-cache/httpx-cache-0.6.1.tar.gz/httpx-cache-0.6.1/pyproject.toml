[tool.poetry]
name = "httpx-cache"
version = "0.6.1"
description = "Simple caching transport for httpx."
authors = ["Ouail Bendidi <ouail.bendidi@gmail.com>"]
license = "BSD 3"
readme = "README.md"
repository = "https://github.com/obendidi/httpx-cache"
homepage = "https://github.com/obendidi/httpx-cache"
keywords = ["httpx", "cache", "cache-control"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Topic :: Internet :: WWW/HTTP",
  "Framework :: AsyncIO",
  "Framework :: Trio",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3 :: Only",
]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
httpx = "^0.23.0"
anyio = "^3.4.0"
msgpack = "^1.0.3"
fasteners = ">=0.16.3,<0.18.0"
attrs = "^21.4.0"
aiorwlock = "^1.2.0"

[tool.poetry.dev-dependencies]
black = {version = "^21.9b0", allow-prereleases = true}
mypy = "^0.931"
isort = "^5.9.3"
flake8 = "^4.0.1"
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
pre-commit = "^2.17.0"
trio = "^0.19.0"
trio-typing = "^0.7.0"
respx = "^0.19.1"
mock = "^4.0.3"
types-mock = "^4.0.8"
mkautodoc = "^0.1.0"
mkdocs-material = "^8.1.8"
pytest-cases = "^3.6.8"
nox = "^2022.1.7"
rich = "^12.0.1"
chardet = "^5.0.0"
types-chardet = "^5.0.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[mypy]
python_version = 3.8
exclude = "tests/"

[tool.black]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | venv
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["httpx_cache"]
known_third_party = ["httpx", "attrs", "msgpack", "anyio"]

[tool.pytest.ini_options]
addopts = "-ra -q -vv --cov=httpx_cache --cov-report=term --cov-report=xml"
# log_cli = true
# log_cli_level = "DEBUG"


[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
omit = ["**/tests/test_*.py"]
fail_under = 90
