{
  "swagger": "2.0",
  "info": {},
  "basePath": "/",
  "tags": [
    {
      "name": "alarms/v1"
    }
  ],
  "paths": {
    "/alarms/v1/alarm/mitre/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Searches for relationships between alarms and MITRE categories (DEV)",
        "description": "",
        "operationId": "searchAlarmMitreRelationships",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Alarm MITRE category relationships search request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmMitreRelationshipSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AlarmMitreRelationship-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all alarms matching a given search criteria (PUBLIC)",
        "description": "",
        "operationId": "searchAlarms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search criteria",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmSearchCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all alarms (PUBLIC)",
        "description": "",
        "operationId": "getAlarms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "Search by keywords",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keywordMatch",
            "in": "query",
            "description": "Set match strategy for keyword search",
            "required": false,
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "any"
            ]
          },
          {
            "name": "keywordField",
            "in": "query",
            "description": "Set field strategy for keyword search",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "all",
              "enum": [
                "reference",
                "description",
                "label",
                "signature",
                "attackIdentifier",
                "id",
                "shortName",
                "all"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of alarms",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned alarms",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Add new alarm (INTERNAL)",
        "description": "",
        "operationId": "addAlarm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add alarm request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmAddRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/{id}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get alarm by Id (PUBLIC)",
        "description": "",
        "operationId": "getAlarmById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of alarm",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Update existing alarm (INTERNAL)",
        "description": "",
        "operationId": "updateAlarm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Alarm",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update alarm request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete existing alarm (INTERNAL)",
        "description": "",
        "operationId": "deleteAlarm",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Alarm",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/{idOrShortName}/mitre": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "List relationships between alarm and MITRE category (DEV)",
        "description": "",
        "operationId": "listAlarmMitreRelationships",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or short name of alarm",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryType",
            "in": "query",
            "description": "Type(s) of the MITRE categories (all by default)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tactic",
                "technique",
                "subtechnique",
                "mitigation",
                "threatActor",
                "malware",
                "tool"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categoryModel",
            "in": "query",
            "description": "The threat model(s) of the MITRE categories (all by default)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categoryVersion",
            "in": "query",
            "description": "The version(s) of the MITRE categories (all by default)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "To include deleted relationships or not (not included by default)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field(s) to sort results by (without sign is ascending, with '-' sign is descending)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max amount of items to return (25 by default, 0 means no limit)",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning (0 by default)",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AlarmMitreRelationship-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds a new relationship between an alarm and a MITRE category (DEV)",
        "description": "",
        "operationId": "addAlarmMitreRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or short name of alarm",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Add alarm MITRE category relationship request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmMitreRelationshipAddRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AlarmMitreRelationship-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/category/{id}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get category by ID (PUBLIC)",
        "description": "",
        "operationId": "getCategoryByID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of category",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          }
        ],
        "deprecated": true,
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AttackCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Update existing category (INTERNAL)",
        "description": "",
        "operationId": "updateCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of attack category",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update attack category request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AttackCategoryUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AttackCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete existing category (INTERNAL)",
        "description": "",
        "operationId": "deleteCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of attack category",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AttackCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/category/{idOrShortName}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get category by ID or shortName (PUBLIC)",
        "description": "",
        "operationId": "getCategoryByIdOrShortName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or shortName of category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AttackCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/category": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all categories (PUBLIC)",
        "description": "",
        "operationId": "getCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of categories",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned categories",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "Filter categories by keywords",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keywordMatch",
            "in": "query",
            "description": "Set match strategy for keyword search",
            "required": false,
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "any"
            ]
          },
          {
            "name": "keywordField",
            "in": "query",
            "description": "Set field strategy for keyword search",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "name",
              "enum": [
                "id",
                "shortName",
                "name",
                "info",
                "all"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AttackCategory-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Add new category (INTERNAL)",
        "description": "",
        "operationId": "addCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add attack category request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AttackCategoryAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AttackCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/category/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all categories matching a given search criteria (PUBLIC)",
        "description": "",
        "operationId": "searchCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search criteria",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AttackCategorySearchCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AttackCategory-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/signature": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all signatures including alarms if mapped (PUBLIC)",
        "description": "",
        "operationId": "getSignatures",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "Search by keywords",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "keywordMatch",
            "in": "query",
            "description": "Set match strategy for keyword search",
            "required": false,
            "type": "string",
            "default": "all",
            "enum": [
              "all",
              "any"
            ]
          },
          {
            "name": "keywordField",
            "in": "query",
            "description": "Set field strategy for keyword search",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "all",
              "enum": [
                "description",
                "signature",
                "signatureMessage",
                "all"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Skip a number of signatures",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of returned signatures",
            "required": false,
            "type": "integer",
            "default": 25,
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AlarmMapping-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete signatures. They must not be mapped to an alarm. (INTERNAL)",
        "description": "",
        "operationId": "deleteSignatures",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signature",
            "in": "query",
            "description": "Signatures to delete",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "maxItems": 2147483647,
            "minItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AlarmMapping-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/signature/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Get all signatures matching a given search criteria (PUBLIC)",
        "description": "",
        "operationId": "searchSignatures",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search criteria",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmMappingSearchCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AlarmMapping-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/mitre/{idOrExtId}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Gets an existing MITRE category (DEV)",
        "description": "",
        "operationId": "getMitreCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID",
            "required": false,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeRelationships",
            "in": "query",
            "description": "Whether to include MITRE category relationships or not (not included by default)",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Updates an existing MITRE category (DEV)",
        "description": "",
        "operationId": "updateMitreCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID",
            "required": false,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update MITRE category request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MitreCategoryUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategory-single"
            }
          },
          "220": {
            "description": "No update was performed"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Deletes an existing MITRE category (DEV)",
        "description": "",
        "operationId": "deleteMitreCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID",
            "required": false,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/mitre/search": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Searches for MITRE categories (DEV)",
        "description": "",
        "operationId": "searchMitreCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "MITRE categories search request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MitreCategorySearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategory-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/mitre": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "List MITRE categories (DEV)",
        "description": "",
        "operationId": "listMitreCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type(s) of the included MITRE categories (all by default)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "tactic",
                "technique",
                "subtechnique",
                "mitigation",
                "threatActor",
                "malware",
                "tool"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Threat model(s) of the included MITRE categories (all by default)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "capec",
                "enterprise",
                "ics",
                "mobile",
                "preAttack"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version(s) of the included MITRE categories (all by default)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Whether to include deleted MITRE categories or not (not included by default)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeDeprecated",
            "in": "query",
            "description": "Whether to include deprecated MITRE categories or not (not included by default)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeRelationships",
            "in": "query",
            "description": "Whether to include MITRE category relationships or not (not included by default)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field(s) to sort results by (without sign is ascending, with '-' sign is descending)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max amount of items to return (25 by default, 0 means no limit)",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning (0 by default)",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategory-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds a new MITRE category (DEV)",
        "description": "",
        "operationId": "addMitreCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Add MITRE category request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MitreCategoryAddRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategory-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/mitre/relations/{idOrExtId}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Gets an existing MITRE category relationship (DEV)",
        "description": "",
        "operationId": "getMitreCategoryRelationship",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or ExtID of the MITRE category relationship (external ID requires an additional query parameter: version)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategoryRelationship-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Updates an existing MITRE category relationship (DEV)",
        "description": "",
        "operationId": "updateMitreCategoryRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category relationship (external ID requires an additional query parameter: version)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update MITRE category relationship request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MitreCategoryRelationshipUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategoryRelationship-single"
            }
          },
          "220": {
            "description": "No update was performed"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Deletes an existing MITRE category relationship (DEV)",
        "description": "",
        "operationId": "deleteMitreCategoryRelationship",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category relationship (external ID requires an additional query parameter: version)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategoryRelationship-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/mitre/{idOrExtId}/relations": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "List MITRE category relationships (DEV)",
        "description": "",
        "operationId": "listMitreCategoryRelationships",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the source or target MITRE category (external ID requires additional query parameters: model, version)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Which threat model to use with external ID of the MITRE category",
            "required": false,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "name": "version",
            "in": "query",
            "description": "Which version to use with external ID of the MITRE category",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Whether to include deleted MITRE category relationships or not (not included by default)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field(s) to sort results by (without sign is ascending, with '-' sign is descending)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max amount of items to return (25 by default, 0 means no limit)",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The amount of items to skip from the beginning (0 by default)",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategoryRelationship-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds a new MITRE category relationship (DEV)",
        "description": "",
        "operationId": "addMitreCategoryRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the source MITRE category (external ID requires an additional query parameter: sourceCategoryModel; version is already part of the request payload)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "sourceCategoryModel",
            "in": "query",
            "description": "Which threat model to use with external ID of the source MITRE category",
            "required": false,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "description": "Add MITRE category relationship request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MitreCategoryRelationshipAddRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreCategoryRelationship-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/mitre/model/{model}/versions/{version}": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Gets an existing MITRE model version info (DEV)",
        "description": "",
        "operationId": "getMitreModelVersion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "description": "The threat model of the MITRE category",
            "required": true,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the MITRE ATT&CK release",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreModelVersion-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      },
      "put": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Adds or updates MITRE model version info (DEV)",
        "description": "",
        "operationId": "addOrUpdateMitreModelVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "description": "The threat model of the MITRE category",
            "required": true,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the MITRE ATT&CK release",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Add or update MITRE model version info request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MitreModelVersionAddOrUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreModelVersion-single"
            }
          },
          "220": {
            "description": "No update was performed"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/mitre/model/{model}/versions": {
      "get": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Lists existing MITRE model version info per model (DEV)",
        "description": "",
        "operationId": "listMitreModelVersions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "description": "The threat model of the MITRE category",
            "required": true,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-MitreModelVersion-list"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/{id}/comment": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Add alarm comment (INTERNAL)",
        "description": "",
        "operationId": "addAlarmComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Alarm",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Add alarm comment request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmCommentAddRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Comment-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/{id}/comment/{timestamp}": {
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Delete alarm comment (INTERNAL)",
        "description": "",
        "operationId": "deleteAlarmComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Alarm",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          },
          {
            "name": "timestamp",
            "in": "path",
            "description": "Timestamp of comment",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Comment-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/{idOrShortName}/mitre/{idOrExtId}": {
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Deletes an existing relationship between an alarm and a MITRE category (DEV)",
        "description": "",
        "operationId": "deleteAlarmMitreRelationship",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrShortName",
            "in": "path",
            "description": "ID or short name of the alarm",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOrExtId",
            "in": "path",
            "description": "ID or external ID of the MITRE category (external ID requires additional query parameters: categoryModel, categoryVersion)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "categoryModel",
            "in": "query",
            "description": "Which threat model to use with external ID of the MITRE category",
            "required": false,
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          },
          {
            "name": "categoryVersion",
            "in": "query",
            "description": "Which version to use with external ID of the MITRE category",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-AlarmMitreRelationship-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Object not found"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/{id}/unmap": {
      "delete": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Unmap signatures from alarm (INTERNAL)",
        "description": "",
        "operationId": "unmap",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Alarm",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Signatures to unmap",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "maxItems": 2147483647,
            "minItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    },
    "/alarms/v1/alarm/{id}/map": {
      "post": {
        "tags": [
          "alarms/v1"
        ],
        "summary": "Map signatures to alarm (INTERNAL)",
        "description": "",
        "operationId": "mapToAlarm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Alarm",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "pattern": "[0-9]+",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Alarm mapping request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlarmMappingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResultStash-Alarm-single"
            }
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "Access denied"
          },
          "412": {
            "description": "Validation error"
          }
        }
      }
    }
  },
  "definitions": {
    "MitreCategoryUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "position": 0,
          "description": "Detailed name of the MITRE category"
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Enumerated type of the MITRE category",
          "enum": [
            "tactic",
            "technique",
            "subtechnique",
            "mitigation",
            "threatActor",
            "malware",
            "tool"
          ]
        },
        "url": {
          "type": "string",
          "position": 0,
          "description": "URL of the external MITRE category page => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)"
        },
        "deprecated": {
          "type": "boolean",
          "position": 0,
          "description": "A boolean flag indicating if the MITRE category is deprecated"
        }
      }
    },
    "AlarmMitreRelationshipSearchRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs of the searched relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "alarm": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs or short names of the alarms that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "category": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs, external IDs or short names of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "categoryType": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated types of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool"
            ]
          }
        },
        "categoryModel": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated threat models of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          }
        },
        "categoryVersion": {
          "type": "array",
          "position": 0,
          "description": "A set of versions of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional search criteria with AND, OR or AND NOT",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AlarmMitreRelationshipSearchSubCriteria"
          }
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without sign is ascending, with '-' sign is descending) (default mitreCategoryShortName, -createdTimestamp)",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "alarmId",
              "alarmShortName",
              "mitreCategoryId",
              "mitreCategoryExternalId",
              "mitreCategoryShortName",
              "mitreCategoryType",
              "mitreCategoryModel",
              "mitreCategoryVersion",
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "deletedTimestamp",
              "-id",
              "-alarmId",
              "-alarmShortName",
              "-mitreCategoryId",
              "-mitreCategoryExternalId",
              "-mitreCategoryShortName",
              "-mitreCategoryType",
              "-mitreCategoryModel",
              "-mitreCategoryVersion",
              "-createdTimestamp",
              "-lastUpdatedTimestamp",
              "-deletedTimestamp"
            ]
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The max amount of items to return (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The amount of items to skip from the beginning (default 0)",
          "minimum": 0,
          "default": 0
        }
      }
    },
    "ResultStash": {
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "object",
          "description": "Returned results (might be an array or a single object)"
        }
      }
    },
    "ResultStash-MitreModelVersion-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/MitreModelVersion"
          }
        }
      }
    },
    "ResultStash-MitreCategory-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/MitreCategory"
          }
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "customer": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "domain": {
          "$ref": "#/definitions/DomainInfo"
        },
        "userName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "customerID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AlarmMappingSearchCriteria": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object."
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "Set to true to include deleted objects. By default, exclude deleted objects."
        },
        "includeFlags": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only include objects which have includeFlags set."
        },
        "excludeFlags": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Exclude objects which have excludeFlags set."
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criterias which are applied using a logical OR.",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AlarmMappingSearchCriteria"
          }
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded."
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
        },
        "attackCategoryID": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs for attack categories (alarm category).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "alarmID": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs for alarms.",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "signature": {
          "type": "array",
          "position": 0,
          "description": "A set of signatures. It does an exact match.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "minTriggerAmount": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Minimum trigger amount, default 0 means disabled"
        },
        "maxTriggerAmount": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Maximum trigger amount, default 0 means disabled"
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only include mappings based on the set TimeFieldStrategy and TimeMatchStrategy (start timestamp)"
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only include mappings based on the set TimeFieldStrategy and TimeMatchStrategy (end timestamp)"
        },
        "timeFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "TimeFieldStrategy to define which timestamp field(s) to match. (default lastTriggeredTimestamp)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "firstTriggeredTimestamp",
              "lastTriggeredTimestamp",
              "mappedTimestamp",
              "lastUpdatedTimestamp",
              "all"
            ]
          }
        },
        "timeMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields. (default any)",
          "enum": [
            "all",
            "any"
          ]
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "A set of keywords matched against mappings based on the set KeywordFieldStrategy and KeywordMatchStrategy.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "KeywordFieldStrategy to define which field(s) to match against keywords. (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "description",
              "signature",
              "signatureMessage",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "KeywordMatchStrategy to define how to match keywords with fields. (default all)",
          "enum": [
            "all",
            "any"
          ]
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
          "items": {
            "type": "string",
            "enum": [
              "signature",
              "signatureMessage",
              "firstTriggeredTimestamp",
              "lastTriggeredTimestamp",
              "lastUpdatedTimestamp",
              "mappedTimestamp",
              "triggerAmount",
              "-signature",
              "-signatureMessage",
              "-firstTriggeredTimestamp",
              "-lastTriggeredTimestamp",
              "-lastUpdatedTimestamp",
              "-mappedTimestamp",
              "-triggerAmount"
            ]
          }
        }
      }
    },
    "AlarmSearchCriteria": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object."
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "Set to true to include deleted objects. By default, exclude deleted objects."
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criterias which are applied using a logical OR.",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AlarmSearchCriteria"
          }
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded."
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
        },
        "attackCategoryID": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs for attack categories (alarm category).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "alarmID": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs for alarms.",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "alarm": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs or short names for alarms.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "alarmReferences": {
          "type": "array",
          "position": 0,
          "description": "A set of references. It does an exact match.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "array",
          "position": 0,
          "description": "A set of labels. It does an exact match.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "includeMappings": {
          "type": "boolean",
          "position": 0,
          "description": "Set to include mappings in the search result. (default false)",
          "default": false
        },
        "includeComments": {
          "type": "boolean",
          "position": 0,
          "description": "Set to include comments in the search result. (default false)",
          "default": false
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only include alarms based on the set TimeFieldStrategy and TimeMatchStrategy (start timestamp)"
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only include alarms based on the set TimeFieldStrategy and TimeMatchStrategy (end timestamp)"
        },
        "timeFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "TimeFieldStrategy to define which timestamp field(s) to match. (default lastUpdatedTimestamp)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "lastCheckTimestamp",
              "nextCheckTimestamp",
              "all"
            ]
          }
        },
        "timeMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields. (default any)",
          "enum": [
            "all",
            "any"
          ]
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "A set of keywords matched against alarms based on the set KeywordFieldStrategy and KeywordMatchStrategy.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "KeywordFieldStrategy to define which field(s) to match against keywords. (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "reference",
              "description",
              "label",
              "signature",
              "attackIdentifier",
              "id",
              "shortName",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "KeywordMatchStrategy to define how to match keywords with fields. (default all)",
          "enum": [
            "all",
            "any"
          ]
        },
        "signature": {
          "type": "array",
          "position": 0,
          "description": "A set of signatures. It does an exact match.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "lastUpdatedTimestamp",
              "description",
              "attackCategory",
              "-id",
              "-lastUpdatedTimestamp",
              "-description",
              "-attackCategory"
            ]
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "Only include objects which have includeFlags set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DISABLED",
              "DELETED"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "Exclude objects which have excludeFlags set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DISABLED",
              "DELETED"
            ]
          }
        }
      }
    },
    "MitreCategorySearchSubCriteria": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "externalId": {
          "type": "array",
          "position": 0,
          "description": "A set of external IDs of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "shortName": {
          "type": "array",
          "position": 0,
          "description": "A set of short names of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated types of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool"
            ]
          }
        },
        "model": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated threat models of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          }
        },
        "version": {
          "type": "array",
          "position": 0,
          "description": "A set of versions of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deprecated",
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deprecated",
              "deleted"
            ]
          }
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "Keywords that are searched for in the fields of MITRE categories",
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "A set of fields of the MITRE categories where the keywords are searched (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "id",
              "externalId",
              "shortName",
              "name",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Selected keyword matching strategy for searching in the fields of MITRE categories (default all)",
          "enum": [
            "all",
            "any"
          ]
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional search criteria with AND, OR or AND NOT",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MitreCategorySearchSubCriteria"
          }
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "Is this sub-criteria required? If false it is OR-ed, if true it is AND-ed (default false)",
          "default": false
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "Exclude objects matching sub-criteria? If true, the criteria is NOT-ed. (default false)",
          "default": false
        }
      }
    },
    "AttackCategorySearchCriteria": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Max number of results."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "Skip the first (offset) objects. By default, return result from first object."
        },
        "includeDeleted": {
          "type": "boolean",
          "position": 0,
          "description": "Set to true to include deleted objects. By default, exclude deleted objects."
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional criterias which are applied using a logical OR.",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AttackCategorySearchCriteria"
          }
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria object will be excluded."
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "Only relevant for subcriteria. If set to true, objects matching this subcriteria are required (AND-ed together with parent criteria)."
        },
        "attackCategoryID": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs for attack categories (alarm category).",
          "uniqueItems": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "attackCategory": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs or short names for attack categories.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "startTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only include attack categories based on the specified TimeFieldStrategy and TimeMatchStrategy (start timestamp)"
        },
        "endTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Only include attack categories based on the specified TimeFieldStrategy and TimeMatchStrategy (end timestamp)"
        },
        "timeFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "TimeFieldStrategy to define which timestamp field(s) to match. (default lastUpdatedTimestamp)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "deletedTimestamp",
              "all"
            ]
          }
        },
        "timeMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "TimeMatchStrategy to define how to match startTimestamp and endTimestamp with fields. (default any)",
          "enum": [
            "all",
            "any"
          ]
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "A set of keywords matched against categories based on the set KeywordFieldStrategy and KeywordMatchStrategy.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "KeywordFieldStrategy to define which field(s) to match against keywords. (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "id",
              "shortName",
              "name",
              "info",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "KeywordMatchStrategy to define how to match keywords with fields. (default all)",
          "enum": [
            "all",
            "any"
          ]
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "List of properties to sort by (prefix with \"-\" to sort descending).",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "shortName",
              "name",
              "info",
              "-id",
              "-shortName",
              "-name",
              "-info"
            ]
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "Only include objects which have includeFlags set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DISABLED",
              "RECONNAISSANCE",
              "DELETED"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "Exclude objects which have excludeFlags set.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DISABLED",
              "RECONNAISSANCE",
              "DELETED"
            ]
          }
        }
      }
    },
    "AlarmMitreRelationshipAddRequest": {
      "type": "object",
      "required": [
        "mitreCategory"
      ],
      "properties": {
        "mitreCategory": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID or external ID of the MITRE category (external ID requires setting additional attributes: categoryModel, categoryVersion)"
        },
        "categoryModel": {
          "type": "string",
          "position": 0,
          "description": "Which threat model to use with external ID of the MITRE category",
          "enum": [
            "capec",
            "enterprise",
            "ics",
            "mobile",
            "preAttack"
          ]
        },
        "categoryVersion": {
          "type": "string",
          "position": 0,
          "description": "Which version to use with external ID of the MITRE category"
        }
      }
    },
    "AttackCategoryAddRequest": {
      "type": "object",
      "required": [
        "info",
        "name"
      ],
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of added category. => [a-zA-Z0-9_\\-\\.]*"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of added category. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        },
        "info": {
          "type": "string",
          "position": 0,
          "description": "Description of added category. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        }
      }
    },
    "ResultStash-AlarmMitreRelationship-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/AlarmMitreRelationship"
          }
        }
      }
    },
    "ResultStash-Comment-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/Comment"
        }
      }
    },
    "DomainInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "AlarmCommentAddRequest": {
      "type": "object",
      "required": [
        "comment"
      ],
      "properties": {
        "comment": {
          "type": "string",
          "position": 0,
          "description": "Comment content. Html is allowed, will be sanitized. => format:html"
        }
      }
    },
    "MitreCategoryRelationshipAddRequest": {
      "type": "object",
      "required": [
        "externalId",
        "targetCategory",
        "type",
        "version"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "External ID of the MITRE category relationship"
        },
        "targetCategory": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID or external ID of target MITRE category (external ID requires setting an additional attribute: targetCategoryModel)"
        },
        "targetCategoryModel": {
          "type": "string",
          "position": 0,
          "description": "Which threat model to use with target MITRE category external ID",
          "enum": [
            "capec",
            "enterprise",
            "ics",
            "mobile",
            "preAttack"
          ]
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Enumerated type of the MITRE category relationship",
          "enum": [
            "subtechniqueOf",
            "revokedBy",
            "mitigates",
            "uses"
          ]
        },
        "version": {
          "type": "string",
          "position": 0,
          "description": "Version of the MITRE ATT&CK release, has to match the version of the related categories"
        }
      }
    },
    "ResultStash-MitreModelVersion-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/MitreModelVersion"
        }
      }
    },
    "ResultStash-AttackCategory-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/AttackCategory"
          }
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the comment was added."
        },
        "user": {
          "position": 0,
          "description": "Who added the comment.",
          "$ref": "#/definitions/UserInfo"
        },
        "comment": {
          "type": "string",
          "position": 0,
          "description": "The comment's text."
        }
      }
    },
    "MitreCategorySearchRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "externalId": {
          "type": "array",
          "position": 0,
          "description": "A set of external IDs of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "shortName": {
          "type": "array",
          "position": 0,
          "description": "A set of short names of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated types of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool"
            ]
          }
        },
        "model": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated threat models of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          }
        },
        "version": {
          "type": "array",
          "position": 0,
          "description": "A set of versions of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deprecated",
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deprecated",
              "deleted"
            ]
          }
        },
        "keywords": {
          "type": "array",
          "position": 0,
          "description": "Keywords that are searched for in the fields of MITRE categories",
          "items": {
            "type": "string"
          }
        },
        "keywordFieldStrategy": {
          "type": "array",
          "position": 0,
          "description": "A set of fields of the MITRE categories where the keywords are searched (default all)",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "id",
              "externalId",
              "shortName",
              "name",
              "all"
            ]
          }
        },
        "keywordMatchStrategy": {
          "type": "string",
          "position": 0,
          "description": "Selected keyword matching strategy for searching in the fields of MITRE categories (default all)",
          "enum": [
            "all",
            "any"
          ]
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional search criteria with AND, OR or AND NOT",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MitreCategorySearchSubCriteria"
          }
        },
        "includeRelationships": {
          "type": "boolean",
          "position": 0,
          "description": "Whether to include MITRE category relationships in search results or not (default false)",
          "default": false
        },
        "sortBy": {
          "type": "array",
          "position": 0,
          "description": "Fields to sort results by (without sign is ascending, with '-' sign is descending) (default shortName, -createdTimestamp)",
          "items": {
            "type": "string",
            "enum": [
              "id",
              "externalId",
              "shortName",
              "name",
              "type",
              "model",
              "version",
              "createdTimestamp",
              "lastUpdatedTimestamp",
              "deletedTimestamp",
              "-id",
              "-externalId",
              "-shortName",
              "-name",
              "-type",
              "-model",
              "-version",
              "-createdTimestamp",
              "-lastUpdatedTimestamp",
              "-deletedTimestamp"
            ]
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The max amount of items to return (default 25)",
          "minimum": 0,
          "default": 25
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "position": 0,
          "description": "The amount of items to skip from the beginning (default 0)",
          "minimum": 0,
          "default": 0
        }
      }
    },
    "ResultStash-Alarm-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/Alarm"
        }
      }
    },
    "ResultStash-Alarm-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/Alarm"
          }
        }
      }
    },
    "MitreCategoryAddRequest": {
      "type": "object",
      "required": [
        "externalId",
        "model",
        "name",
        "shortName",
        "type",
        "url",
        "version"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "External ID of the MITRE category"
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of the MITRE category"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Detailed name of the MITRE category"
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Enumerated type of the MITRE category",
          "enum": [
            "tactic",
            "technique",
            "subtechnique",
            "mitigation",
            "threatActor",
            "malware",
            "tool"
          ]
        },
        "model": {
          "type": "string",
          "position": 0,
          "description": "Enumerated threat model of the MITRE category",
          "enum": [
            "capec",
            "enterprise",
            "ics",
            "mobile",
            "preAttack"
          ]
        },
        "version": {
          "type": "string",
          "position": 0,
          "description": "Version of the MITRE ATT&CK release"
        },
        "url": {
          "type": "string",
          "position": 0,
          "description": "URL of the external MITRE category page => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)"
        }
      }
    },
    "AlarmMappingRequest": {
      "type": "object",
      "required": [
        "signatures"
      ],
      "properties": {
        "signatures": {
          "type": "array",
          "position": 0,
          "description": "Signatures (exist/new) to be mapped to the alarm => Sanitize by regex [a-zA-Z0-9_/:@~!\\+\\-\\.\\?]*",
          "uniqueItems": true,
          "items": {
            "type": "string"
          },
          "maxItems": 2147483647,
          "minItems": 1
        }
      }
    },
    "ResultStash-AlarmMapping-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/AlarmMapping"
          }
        }
      }
    },
    "MitreCategoryRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the response object."
        },
        "externalId": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "External ID of the relationship between MITRE categories"
        },
        "sourceCategory": {
          "position": 0,
          "description": "Info object of the source MITRE category that is part of the relationship",
          "$ref": "#/definitions/MitreCategoryInfo"
        },
        "targetCategory": {
          "position": 0,
          "description": "Info object of the target MITRE category that is part of the relationship",
          "$ref": "#/definitions/MitreCategoryInfo"
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Enumerated type of the relationship between MITRE categories",
          "enum": [
            "subtechniqueOf",
            "revokedBy",
            "mitigates",
            "uses"
          ]
        },
        "version": {
          "type": "string",
          "position": 0,
          "description": "Version of the relationship (MITRE ATT&CK release), has to match the version of the related MITRE categories"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Enumerated flags reflecting the state of the relationship between MITRE categories",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the relationship between MITRE categories created"
        },
        "createdByUser": {
          "position": 0,
          "description": "Who created the relationship between MITRE categories",
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the relationship between MITRE categories updated"
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "Who updated the relationship between MITRE categories last",
          "$ref": "#/definitions/UserInfo"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the relationship between MITRE categories deleted"
        },
        "deletedByUser": {
          "position": 0,
          "description": "Who deleted the relationship between MITRE categories",
          "$ref": "#/definitions/UserInfo"
        }
      }
    },
    "AlarmMitreRelationshipSearchSubCriteria": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs of the searched relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "alarm": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs or short names of the alarms that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "category": {
          "type": "array",
          "position": 0,
          "description": "A set of IDs, external IDs or short names of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "categoryType": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated types of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "tactic",
              "technique",
              "subtechnique",
              "mitigation",
              "threatActor",
              "malware",
              "tool"
            ]
          }
        },
        "categoryModel": {
          "type": "array",
          "position": 0,
          "description": "A set of enumerated threat models of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "capec",
              "enterprise",
              "ics",
              "mobile",
              "preAttack"
            ]
          }
        },
        "categoryVersion": {
          "type": "array",
          "position": 0,
          "description": "A set of versions of the MITRE categories that take part in the relationships",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "includeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of included enumerated flags of the searched relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "excludeFlags": {
          "type": "array",
          "position": 0,
          "description": "A set of excluded enumerated flags of the searched relationships",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "subCriteria": {
          "type": "array",
          "position": 0,
          "description": "Set additional search criteria with AND, OR or AND NOT",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AlarmMitreRelationshipSearchSubCriteria"
          }
        },
        "required": {
          "type": "boolean",
          "position": 0,
          "description": "Is this sub-criteria required? If false it is OR-ed, if true it is AND-ed (default false)",
          "default": false
        },
        "exclude": {
          "type": "boolean",
          "position": 0,
          "description": "Exclude objects matching sub-criteria? If true, the criteria is NOT-ed. (default false)",
          "default": false
        }
      }
    },
    "MitreCategoryInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the response object."
        },
        "externalId": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "External ID of the MITRE category"
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of the MITRE category"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Detailed name of the MITRE category"
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Enumerated type of the MITRE category",
          "enum": [
            "tactic",
            "technique",
            "subtechnique",
            "mitigation",
            "threatActor",
            "malware",
            "tool"
          ]
        },
        "model": {
          "type": "string",
          "position": 0,
          "description": "Enumerated threat model of the MITRE category",
          "enum": [
            "capec",
            "enterprise",
            "ics",
            "mobile",
            "preAttack"
          ]
        },
        "version": {
          "type": "string",
          "position": 0,
          "description": "Version of the MITRE category (MITRE ATT&CK release)"
        }
      }
    },
    "ResultMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageTemplate": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "FIELD_ERROR",
            "ACTION_ERROR",
            "WARNING",
            "NOTIFICATION",
            "INFO"
          ]
        },
        "field": {
          "type": "string"
        },
        "parameter": {
          "type": "object"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MitreCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the response object."
        },
        "externalId": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "External ID of the MITRE category"
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of the MITRE category"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Detailed name of the MITRE category"
        },
        "type": {
          "type": "string",
          "position": 0,
          "description": "Enumerated type of the MITRE category",
          "enum": [
            "tactic",
            "technique",
            "subtechnique",
            "mitigation",
            "threatActor",
            "malware",
            "tool"
          ]
        },
        "model": {
          "type": "string",
          "position": 0,
          "description": "Enumerated threat model of the MITRE category",
          "enum": [
            "capec",
            "enterprise",
            "ics",
            "mobile",
            "preAttack"
          ]
        },
        "version": {
          "type": "string",
          "position": 0,
          "description": "Version of the MITRE category (MITRE ATT&CK release)"
        },
        "url": {
          "type": "string",
          "position": 0,
          "description": "URL of the external MITRE category page"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Enumerated flags reflecting the state of the MITRE category",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deprecated",
              "deleted"
            ]
          }
        },
        "relationships": {
          "type": "array",
          "position": 0,
          "description": "Relationships that this MITRE category is participating in",
          "items": {
            "$ref": "#/definitions/MitreCategoryRelationship"
          }
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the MITRE category created"
        },
        "createdByUser": {
          "position": 0,
          "description": "Who created the MITRE category",
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the MITRE category updated"
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "Who updated the MITRE category last",
          "$ref": "#/definitions/UserInfo"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the MITRE category deleted"
        },
        "deletedByUser": {
          "position": 0,
          "description": "Who deleted the MITRE category",
          "$ref": "#/definitions/UserInfo"
        }
      }
    },
    "ResultStash-MitreCategoryRelationship-list": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "type": "array",
          "description": "Contains an array of results",
          "items": {
            "$ref": "#/definitions/MitreCategoryRelationship"
          }
        }
      }
    },
    "AttackCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of the category."
        },
        "info": {
          "type": "string",
          "position": 0,
          "description": "Short information about the category."
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Name of the category."
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the category created."
        },
        "createdByUser": {
          "position": 0,
          "description": "Who created the category.",
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the category updated."
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "Who updated the category last.",
          "$ref": "#/definitions/UserInfo"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the category deleted."
        },
        "deletedByUser": {
          "position": 0,
          "description": "Who deleted the category.",
          "$ref": "#/definitions/UserInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DISABLED",
              "RECONNAISSANCE",
              "DELETED"
            ]
          }
        }
      }
    },
    "MitreModelVersionAddOrUpdateRequest": {
      "type": "object",
      "properties": {
        "markAsDefault": {
          "type": "boolean",
          "position": 0,
          "description": "A boolean flag indicating whether this version should be marked as the default one for this model (default value is null, meaning no change)"
        }
      }
    },
    "AlarmUpdateRequest": {
      "type": "object",
      "required": [
        "attackCategoryID"
      ],
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Update short name of the alarm => [a-zA-Z0-9_\\-\\.]*"
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Update description of alarm => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        },
        "attackCategoryID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Update category of alarm (unchanged if set to 0) (default 0)",
          "minimum": 0,
          "default": 0
        },
        "info": {
          "type": "string",
          "position": 0,
          "description": "Update verbose information of alarm => format:html"
        },
        "disabled": {
          "type": "boolean",
          "position": 0,
          "description": "Disable or enable alarm (unchanged if not set)"
        },
        "addReferences": {
          "type": "array",
          "position": 0,
          "description": "Add vulnerability references (CVE-numbers, BID-numbers, URLs etc) => Sanitize by regex ^((?!(https?|ftp|gopher|telnet|file|javascript|mailto):))([\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=])*|((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "deleteReferences": {
          "type": "array",
          "position": 0,
          "description": "Remove vulnerability references",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "addLinks": {
          "type": "array",
          "position": 0,
          "description": "Add external links => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "deleteLinks": {
          "type": "array",
          "position": 0,
          "description": "Remove external links",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "addLabels": {
          "type": "array",
          "position": 0,
          "description": "Add labels => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "deleteLabels": {
          "type": "array",
          "position": 0,
          "description": "Remove labels => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "internalReference": {
          "type": "string",
          "position": 0,
          "description": "A link to an internal reference for the alarm => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        }
      }
    },
    "ResultStash-AlarmMitreRelationship-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/AlarmMitreRelationship"
        }
      }
    },
    "AlarmMapping": {
      "type": "object",
      "properties": {
        "alarm": {
          "position": 0,
          "description": "Alarm the signature is mapped to (null if not mapped).",
          "$ref": "#/definitions/Alarm"
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "Who updated the mapping last.",
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the mapping was last updated."
        },
        "comments": {
          "type": "array",
          "position": 0,
          "description": "Comments added to the mapping.",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "mappedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the signature was mapped."
        },
        "mappedByUser": {
          "position": 0,
          "description": "Who mapped the signature.",
          "$ref": "#/definitions/UserInfo"
        },
        "firstTriggeredTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the signature was first triggered."
        },
        "lastTriggeredTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the signature was last triggered."
        },
        "triggerAmount": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "How often the signature was triggered."
        },
        "signature": {
          "type": "string",
          "position": 0,
          "description": "Signature mapped to alarm."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DELETED",
              "DEFAULT_BLOCK",
              "SNORT",
              "ISS_SIGNATURE"
            ]
          }
        }
      }
    },
    "ResultStash-MitreCategory-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/MitreCategory"
        }
      }
    },
    "Alarm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of the alarm."
        },
        "attackCategory": {
          "position": 0,
          "description": "Category of the alarm.",
          "$ref": "#/definitions/AttackCategory"
        },
        "mappings": {
          "type": "array",
          "position": 0,
          "description": "Signatures mapped to the alarm.",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AlarmMapping"
          }
        },
        "comments": {
          "type": "array",
          "position": 0,
          "description": "Comments added to the alarm.",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        },
        "references": {
          "type": "array",
          "position": 0,
          "description": "Further references to the alarm.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "array",
          "position": 0,
          "description": "Label assigned to the alarm.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "info": {
          "type": "string",
          "position": 0,
          "description": "Verbose information about the alarm."
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Short description about the alarm."
        },
        "internalReference": {
          "type": "string",
          "position": 0,
          "description": "An internal link with info about the alarm. Will be omitted if user does not have required permissions"
        },
        "links": {
          "type": "array",
          "position": 0,
          "description": "Links added to the alarm.",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "createdByUser": {
          "position": 0,
          "description": "Who created the alarm.",
          "$ref": "#/definitions/UserInfo"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the alarm was created."
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "Who updated the alarm last.",
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the alarm was last updated."
        },
        "lastCheckedByUser": {
          "position": 0,
          "description": "Who checked the alarm last.",
          "$ref": "#/definitions/UserInfo"
        },
        "lastCheckTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the alarm was last checked."
        },
        "nextCheckTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When the alarm should be checked next."
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Flags assigned to the object.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "DISABLED",
              "DELETED"
            ]
          }
        }
      }
    },
    "MitreCategoryRelationshipUpdateRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "position": 0,
          "description": "Enumerated type of the MITRE category relationship",
          "enum": [
            "subtechniqueOf",
            "revokedBy",
            "mitigates",
            "uses"
          ]
        }
      }
    },
    "MitreModelVersion": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "position": 0,
          "description": "Enumerated threat model of the MITRE category",
          "enum": [
            "capec",
            "enterprise",
            "ics",
            "mobile",
            "preAttack"
          ]
        },
        "version": {
          "type": "string",
          "position": 0,
          "description": "Version of the MITRE ATT&CK release"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Enumerated flags reflecting the state of the MITRE model version",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "default"
            ]
          }
        }
      }
    },
    "AlarmInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "ID of the response object."
        },
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of the alarm."
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Short description about the alarm"
        }
      }
    },
    "AlarmAddRequest": {
      "type": "object",
      "required": [
        "attackCategoryID",
        "description"
      ],
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Short name of the alarm => [a-zA-Z0-9_\\-\\.]*"
        },
        "description": {
          "type": "string",
          "position": 0,
          "description": "Alarm description => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        },
        "attackCategoryID": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "Alarm attack category ID (default 0)",
          "minimum": 1,
          "default": 0
        },
        "info": {
          "type": "string",
          "position": 0,
          "description": "Alarm verbose information => format:html"
        },
        "references": {
          "type": "array",
          "position": 0,
          "description": "Alarm vulnerability references (CVE-numbers, BID-numbers, URLs etc) => Sanitize by regex ^((?!(https?|ftp|gopher|telnet|file|javascript|mailto):))([\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=])*|((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "links": {
          "type": "array",
          "position": 0,
          "description": "Links to external descriptions of this alarm => ((https?|ftp|gopher|telnet|file):((/)|(\\\\))+[\\w\\d:\\#@%/;$()~_?\\\\+-=\\\\\\.&]*)",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "array",
          "position": 0,
          "description": "Tag an alarm with labels => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "internalReference": {
          "type": "string",
          "position": 0,
          "description": "A link to an internal reference for the alarm => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        },
        "signatures": {
          "type": "array",
          "position": 0,
          "description": "List of signatures to map to this alarm => Sanitize by regex [a-zA-Z0-9_/:@~!\\+\\-\\.\\?]*",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AlarmMitreRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "position": 0,
          "description": "ID of the response object."
        },
        "alarm": {
          "position": 0,
          "description": "Info object of the alarm that is part of the relationship",
          "$ref": "#/definitions/AlarmInfo"
        },
        "mitreCategory": {
          "position": 0,
          "description": "Info object of the MITRE category that is part of the relationship",
          "$ref": "#/definitions/MitreCategoryInfo"
        },
        "flags": {
          "type": "array",
          "position": 0,
          "description": "Enumerated flags reflecting the state of the relationship between alarm and MITRE category",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "deleted"
            ]
          }
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the relationship between alarm and MITRE category created"
        },
        "createdByUser": {
          "position": 0,
          "description": "Who created the relationship between alarm and MITRE category",
          "$ref": "#/definitions/UserInfo"
        },
        "lastUpdatedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the relationship between alarm and MITRE category updated"
        },
        "lastUpdatedByUser": {
          "position": 0,
          "description": "Who updated the relationship between alarm and MITRE category last",
          "$ref": "#/definitions/UserInfo"
        },
        "deletedTimestamp": {
          "type": "integer",
          "format": "int64",
          "position": 0,
          "description": "When was the relationship between alarm and MITRE category deleted"
        },
        "deletedByUser": {
          "position": 0,
          "description": "Who deleted the relationship between alarm and MITRE category",
          "$ref": "#/definitions/UserInfo"
        }
      }
    },
    "CustomerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "domain": {
          "$ref": "#/definitions/DomainInfo"
        }
      }
    },
    "ResultStash-MitreCategoryRelationship-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/MitreCategoryRelationship"
        }
      }
    },
    "AttackCategoryUpdateRequest": {
      "type": "object",
      "properties": {
        "shortName": {
          "type": "string",
          "position": 0,
          "description": "Update short name of category. => [a-zA-Z0-9_\\-\\.]*"
        },
        "name": {
          "type": "string",
          "position": 0,
          "description": "Update name of category. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        },
        "info": {
          "type": "string",
          "position": 0,
          "description": "Update description of category. => [\\s\\w\\{\\}\\$\\-\\(\\)\\.\\[\\]\"\\'_/\\\\,\\*\\+\\#:@!?;=]*"
        },
        "disabled": {
          "type": "boolean",
          "position": 0,
          "description": "Disable or enable category (unchanged if not set)"
        }
      }
    },
    "ResultStash-AttackCategory-single": {
      "required": [
        "data"
      ],
      "properties": {
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Status code returned from API"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum number of returned results"
        },
        "offset": {
          "type": "integer",
          "format": "int64",
          "description": "Number of skipped results"
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Number of available results on server"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "Actual number of returned results"
        },
        "metaData": {
          "type": "object",
          "description": "Additional unstructured meta data associated with response"
        },
        "messages": {
          "type": "array",
          "description": "Contains messages returned from the API, usually error messages",
          "items": {
            "$ref": "#/definitions/ResultMessage"
          }
        },
        "data": {
          "description": "Contains a single result",
          "$ref": "#/definitions/AttackCategory"
        }
      }
    }
  }
}