[tool.poetry]
name = "jiraworklog"
version = "0.1.3"
description = "Command-line application to synchronize local worklog records with a Jira server"
authors = ["David Pritchard <david.al.pritchard@gmail.com>"]
readme = "README.md"
repository = "https://github.com/dapritchard/jiraworklog"

[tool.poetry.dependencies]
python = "^3.9"
PyYAML = ">= 6.0"
pytz = ">= 2022.1"
jira = ">= 3.3.0"
Cerberus = ">= 1.3.4"
openpyxl = ">= 3.0.10"
prettyprinter = ">= 0.18.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
deepdiff = "^5.8.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Define an "entry point", i.e. a shim script that gets placed into `bin` and
# calls jiraworklog.application.main(). See the following for details:
# https://python-poetry.org/docs/pyproject/#scripts
# https://setuptools.pypa.io/en/latest/userguide/entry_point.html
# https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point
[tool.poetry.scripts]
jiraworklog = 'jiraworklog.application:main'
