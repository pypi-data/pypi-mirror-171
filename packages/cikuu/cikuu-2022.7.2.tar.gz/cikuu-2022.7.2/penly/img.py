#2022.10.2
from penly import * 
from requests_toolbelt import MultipartEncoder

def upload_media(appToken:str='bascnHETIcLbAttTsTwjQA9Lpkf', img_bytes:bytes=b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x07\x08\x00\x00\x00\xf0\x08\x02\x00\x00\x00\x9b\x97\xa7+\x00\x00\x0e\xb3IDATx\x9c\xed\xdd\xc1\x9a\xa3\xb6\x12\x80\xd1\xd6\xfd\xe6\xfd_Yw\xe1I\xc7\xb1\x01c@\xa2\xa4:g\x95\xcet\xdcB0\x8b\xfeS@\xa9\xb5\xfe\x00\x00\x00\x00\x00d\xf2\xbf\xbb\x17\x00\x00\x00\x00\x00\xd0\x9b0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\xf3(\xa5\x94R\xee^\x050\x80Rk\xbd{\r\x00\x00\x00\x00\x1f\x1c\xcb\x9d\xba\x07\xb0\xc6\xc4(\x00\x00\x00m=z\x96!>\x0e;3\x04Z\xfeq\xed\x92\x80\t\xfc\xb9{\x01\x00\x00\x00\xcc\xec9H\xfd\xfe\xb3!>v\x124\x81v\xdcJ\x0f\x00\x00@\x13\x1f\x93\x96_H\xd9\xd0"\x89\xba\xe4\x80g\xc2(\x00\x00\x00\xd7SE9\xec\x92\x8bg\xedC\\x\xc0/a\x14\x00\x00\x80+}5\xe8\xe7w\xd29\\\xf5\x90\x84\x16=\xfd\xfd3]u\xc0\x83\x97/\x01\x00\x00p\xa5\xc5\xeaTkU\xa3\xd8\xb6]E\x0f_B.<`\x8d0\n\x00\x00@[\xbfeJ\x1e\x9d\xde\xb1\x07\x83n\xbf5\xfe\xfce\xe3\xaa\x03\x16y+=\x00\x00\x00\x17\xab\xb5>:\xd7\xc7 U\x8a\'\xbc\x8d\xed\xe4+\x92>N\x89\x9e\xf9\xf0\x8d\x1f\xea\xaa\x03~L\x8c\x02\x00\x00\xd0\x88\xf6\x94\xc1\xfbY\xde\x99J[O\x89\x02|db\x14\x00\x00\x80\xeb\xed\xafZ{:\x9aF6\x96\x8f#\x99\x9d\x07EO\x8e\xb5\x02\xb3\x12F\x01\x00\x00\x88\xee\xaa\x97\x9e\xd3\xc2\xef\x93\x13\xf6\xb8\xe5\xde\xf9[~\n\x10\x9f[\xe9\x01\x00\x00\xe8\xeaL\x96\xda\xbe\xff\x9a\xbb\x1c\xbe\xa1\xfe\xf9\x13\xf4J\xa03a\x14\x00\x00 \x8b I\xf1\xfc2\xca?.Y\x0f\xdd,\x9e\xb2\x0eITr\x05\x16\t\xa3\x00\x00\x00\x93{\xcf\x88\xf7&\xc5\x0b+U\x9e<\x1a\xffH?\x9e\xd6\xb5*\xdaf9_\xaf\x04H\xe8\xc3\xe3\x90\x01\x00\x00\x18W\x84\xe79\xaey_\xdb\xc6zv\x96\xac\xf9~\xc3\xdd~o{\xcf\x95\xec\xf1\xbc\xda\x97\xe5}u\xba[xY@\xc0\xdd\x03\xfa\xf3\xf2%\x00\x00\x80\xd9\x0c1\x10\xf7\xd5\x1b{\x1e\x19\xeb\xe3\xf7?\xbea\xf4\xe6\xb5s[\xa2\x95\xbe\x8deG[*\xc0\x830\n\x00\x000\x8f\xaf\x92h)\xb1n"\xfc\xb8\x9e\xdf?\xdd>\xccA_a\x7f\xc9\xa3W\x03\x1e\xb2*\n\x84\xe5\x19\xa3\x00\x00\x003\x88\xff\x0c\xca\x0b\xedy]\xcfW\x13\xa9\xb7;\xdf4\x1f\x07\x1b\xed\x90UQ 2\x13\xa3\x00\x00\x00c\xdb\xd3\xc2\xd6f-\xef\x9d1<\xd9.\xb7\x07H\x7fCa\xfc\x18\xb7\xa7i\xbe\x1fE\xb4\x06\n0\x1ca\x14\x00\x00`T\x1f\xd3X\xfc&x\x89\x9dO \x8d\xe9\xf0\xeb\x95b\xc6n\x80\x81\xb8\x95\x1e\x00\x00`H\xdb\xfdk\xedf\xf3\xe0\x83\x87\'\x07H\x17\x8f:\xd4\x01\xee\xb1v \xfb\xddr\xc8\xef\xaf\xa1w\x1f=\x10\x9c0\n\x00\x000\xaa\xc5\xfeu\xb2\xa9M)l\x1b}_\xd8\x81s\xe7t\x03\x1c#\x8c\x02\x00\x00\x8c\xe7L\x12\r5S\xd9"\xea\x8d\x12\n/\xdc\xf6\xc5s\x9a\xea}\\\x00\x07\x08\xa3\x00\x00\x003\x18\xa5\x06\xf6\x11*\xfe.ZK\xdb-~P\xb4c\x07\x08B\x18\x05\x00\x00\x18\xcc\xf9\xfb\xaf#W\xd4v\x15/N\x1flQE\x1f\xff\xf9\xda\x87\x18 \x05x\'\x8c\x02\x00\x000\xa1\xc8\xf1\xf7\xdd%\xab\xad\xb5n\xa7\xcf\x1b\xf7d\xac\xd3\x01$!\x8c\x02\x00\x00\x8c\xe4\x92\xd7\xf5\x84\xd2n\xfd1o\xa8oz\x06\xcf\xbf\xd1\x1e \x0fa\x14\x00\x00`\x18\x11\xba^\x07M\x0f\xf3\xde=\xec\xf6\xd3\x17\xf3\xa8\xbb\xe9\x01\x9e\t\xa3\x00\x00\x00\x033\x1b\xb8-\xfe\xfet^a\xd3\x1f\x17\x7f\xb7\x01\x9e\t\xa3\x00\x00\x00c\x98\xef&\xfa_\x9dk\xdd]S\x93\x13\x9fA\x80\x11\t\xa3\x00\x00\x00\x03p\x07\xf4\x19q\xdahOq:\xac\xfe\x0b\xc4$\x8c\x02\x00\x00D\xb7X\xf1\xe6\x8eM\x1d\xc2\xe5\xedmt\xee3\x08\x10\x9f0\n\x00\x000\x9e\xf3M\xed\xe5\x13n\xaf\x84\xade\xab\x90q\xc6E\x01\xc2\x12F\x01\x00\x00BKR\xb8:\x1c\xd4\xbd7\xd4O\x9f\x9e\x83\xcb\xf6\x7f\x02\x80=\x84Q\x00\x00\x80\xb82\xe7\x9b>\xc7>\xe5\x0e\'\x89\xe9\x00\'\t\xa3\x00\x00\x00#Q\xb8\xce\x88\xb3{qV\x02\x90\x960\n\x00\x00\x10T\xb6\xb9\xbf>G7\xfd\x1b\xea\xa3]6s_\xb4\xc0\xd0\x84Q\x00\x00\x00\xb2k\xddF\'k\xaf\x00s\x10F\x01\x00\x00\xc6\x90p\xf2\xaeQO\xbc}\'\xdb- \xda\xb8(@d\xc2(\x00\x00\x00\xe9L\x7fC=\x00\x1f\t\xa3\x00\x00\x00\xe1\x94Rrv\xba)\xc7\x1b\xbb\x9dJ\xe3\xa2\x00_\x11F\x01\x00\x00\xc8H4\x04HN\x18\x05\x00\x00\x88%\xe7\xac\xe8\x9a\xf9v\xa3[\x90\x8dP~#\xac\x01`\x8d0\n\x00\x00\x90\xd4K\xb4\x9a/A\xa6\xe2\xf4\x01|K\x18\x05\x00\x00 \x90\xc9f\x0cS\xf5\xcaT\x07\x0bL@\x18\x05\x00\x00\x08DZ\xeai\x9a\x99Y\xaf]\x028@\x18\x05\x00\x00\x80NZ\xf4\xcaq{.\xc0\xbd\x84Q\x00\x00\x80\xbc\xa6\x19\x99Lk\xf1\x94\x19\x17\x05\xd8C\x18\x05\x00\x00\x80\xf1\x94R\x82\xdfA\x1fj1\x00\xef\xfe\xdc\xbd\x00\x00\x00\x00\xfez\xe9\\9\xbb\x92M\xf8hc\xb0\xb7\x94b\xc7\x00v\x12F\x01\x00\x00`\x0c\xdb\xcf:\x90D\x01\xbe\xe2Vz\x00\x00\x80\xd4<f\xf4*\xad\xb7n\xe3\xf3k\xad\xaa(\xc0\xb7L\x8c\x02\x00\x00\xc0)\xbf7\xb07j\xa3\x06E\x01Z01\n\x00\x00@^W\r\xcc\xb6K\xa2\x06E\x01\x1a11\n\x00\x00\x90\x9a{\xe7O\xfaj\x03\x7f\xbfy-h\xee\xfc4=\x14\xe0<a\x14\x00\x00\x00z;\xdc\xa3\xc3&\xd1cG\xf4\xfb\x14\x02\x80\xfe\x84Q\x00\x00\x00\xfe\xa5R}\xeb\xe5\xe9\xa2\xcf\x1bx\xf94\xee\x94gG\x1b\x05\xee\xe2\x19\xa3\x00\x00\x00yE\xbb\x8f\xfee=\x03\xf5\xb2\xc5\xc7}^\xb8\xfe)\x1f\'\xfa{\xba\xa3]\x87@\x12&F\x01\x00\x00\xe0\x1a\x8bm\xf4\xb9\xfa\xbd|\xb9\xf3CF\xf4\xedQ\x98\x1b\x05\xfa\x13F\x01\x00\x00\xf8K\x99j\xed9\xff=\ni\xda=\x7f\x0f\xc4\xc97\x04\xe8O\x18\x05\x00\x00H\xca\xfd\xcb\xf7\xeaS\x00\xc3>\x9d`mx\xd6\xe8(\xd0\x8dg\x8c\x02\x00\x00\x90\xdaK\x86\xd3\x8b\x0f8\xb6ik\x01\xd4)\x00\xfa\x10F\x01\x00\x00\xf8\xf9\x894KH\x1e\xda(p#a\x14\x00\x00 #\xe1\x89 j\xad\x8by\xd4%\n\xb4&\x8c\x02\x00\x00\x00W:0}\xac\x8d\x02\xfd\t\xa3\x00\x00\x00\xb8\x8f~Na\xdf\xbc\xb4H\x1b\x05:\x13F\x01\x00\x00\xd2\x89\x19\x9b\xee\xaax1w#\xa7\xb56\xea\x1c\x01-\x08\xa3\x00\x00\x00\xc0q\xd7VK\xafc\x02\xba\x11F\x01\x00\x00\xb2\x0b~\x87ugv\xe3v\xda(\xd0\x870\n\x00\x00\x90\x8b\xba\xf4\xccn\xc4\xa4\x8d\x02\x1d\x08\xa3\x00\x00\x00\xf0\x97q\xd1\xf3\xae\xda\xc3Z\xab\xd71\x01M\t\xa3\x00\x00\x00A\xb5\x08@\xef\x9f\x999\x05Jl\xf1i\xa3@;\xc2(\x00\x00\x00\x10\x976\n4"\x8c\x02\x00\x00D\xf1\x1e\x80\xae\xad?\xc6E\xb7M\xb6\x1b/\xa7\xbb\xdb\xd1\xb5H\x96\xda(\xd0\x820\n\x00\x00\xc0\xfd\xfaW\xbcnY\xed\xe5X\xe4\xbcc\xd6\xda\xa8\xfd\x04\x0e\x13F\x01\x00\x00\x02i74j\\\x94FZO:o\xfc\xa0\xa6?\x0e\x98\x9e0\n\x00\x00\x002\xf1\x18\x0e\xb7\xd1\xbb\x1e,\x00D&\x8c\x02\x00\x00\xc4\xd2b\xfe\xce\xb8\xe8\x0b3\x86\xd7z\xbe\x9cj\xadM\xaf.s\xa3\xc0U\x84Q\x00\x00\x80p\xba\xdd\x9b\xcc\xc3|\x99\xf8\xae\x0b\xa6\xcfN\xae\xb5W\x7fM\x80\xaf\x08\xa3\x00\x00\x00\x933.\xfaB>k\xa1\xf5\xa0\xe8\xe2O|\xff\x97N.\xb0\x9f0\n\x00\x00\x10\x91\xa1\xd1Fn\xd9\xc6\xce/\xa6\xcf\x93\xc2\xb5Q\xe0\x0ca\x14\x00\x00`fy\x1a\xd9G\xa5\x94\xc5d\x96vC\xe6\xb0\xd6F\x9f\xcf\xb57/\x01\x8b\x84Q\x00\x00\x80\xa0\xf2\x0c\x8dv\xe8V\x99\x93\xe8\xf4\x87\xe9uL\xc01\xc2(\x00\x00\xc0H\xbej=\xc6E\x7f\xd6\x07E\x1f\x7f4\xdf\x86\xe4\xac\x81\xda(p\x800\n\x00\x00\x10\xd7|\xd9\xae\xa7\x8d$\xfas\xc7\xcb\x82hJ\x1b\x05\xbe%\x8c\x02\x00\x00\x84v\xf8\x86\xfa\xcc\xe3\xa2i\x93h\xe6\x93\xfe\xb3\xef\xcc\xa6\xda\x10`\xdb\x9f\xbb\x17\x00\x00\x00\x00\x97\xd9\xae\xc6\xa2X\x06\xb5VS\xa2\xc0\x1e&F\x01\x00\x00\xa2;04\x9aprp{J\xf4\xe7\xee\x1dx\xf9\xe9-\xca]\xc2\x93\xbe&\xed\x81\x03_\x11F\x01\x00\x00\x18\xde\xc7$\xaa\x94e\xe3\x8c\x03\x1f\t\xa3\x00\x00\x00\x038\xfc\xa4\xd1\xb5\xff|\x1ai\x1f\'\xfaQ\xda\x03\x07\xd8I\x18\x05\x00\x00\x18\xc3\xc96:\x1fI\xf4Y\xf2\x8baQ\xaa\x0b\x008\xc0\xcb\x97\x00\x00\x00\xb8\xd3K\xd1\xdb\x13\xb3"?K\x14\x80Q\x08\xa3\x00\x00\x00\xc3x\x7f\xddv)\xe5\xe3$\xe9\x1c\xa1p\xcfD\xe4\x1cGz\x80\xd7.\xed\xb7\xf8W\x06\xc8\xc9\xad\xf4\x00\x00\x00\x04U\x9e|\xfc\xe6\xf8\xb5\xab\xc3\x8b\xe9y\xb1xU\xd8y\xe0\xc1\xc4(\x00\x00\xc0H\x16\x87F\x7fF\xc8\x82;\x1d\x88V\xd3\x1c\xfb1\xc6E\xb7\xbd\xff\x95\x01x01\n\x00\x000\x83\x9dc\x95\x93\x19\xfd\rK\tO\xd9-\xbc\xb8\x0cXdb\x14\x00\x00`0\x8f\t\xb8\xc59\xb8!r\xcf\xe1E\x0e\xdd@\xd7\x9c\x1c\xf85.\np\x98G\x0e\x03\x00\x00\x0cig^\x0c\xf8K\xdfWa4\xe0\xfa\xcf[\xdc\x81\x03Gz\xd5\xe7$!"\x03/L\x8c\x02\x00\x00\x0c\xe9\xd1t\x86\x18\x11\xfd\xca\xf4\xadj\xed\x94]\xf2\xac\xd8\xe9w\x0f\xe0B&F\x01\x00\x00f\xb0\x96\xdb\x02\xfe\xd2\xb7\x11s\x03\xae\xb6\x91\xed\xa2\xbdg\x1f\xcc?\x1e`\xd3\x80g\xc2(\x00\x00\xc0<~\xbbO\xe4\xdf\xf5\x1e\x0fH\xfd\xfd\xe7\xe7?\x8a\xbc\xec\x16\x0e\xe7Q\x81\xef\x18\x0f\x1f\x00\x9ey+=\x00\x00\xc0<\x86xK{\xfc\x15v\xb3\xbd\x15\xdb7\xdds\xc0\xe2\x86\xdbOHK\x18\x05\x00\x00\x98\x8d\xf28\x90\xed\x96]J\xd9\x93\xed\x9c\xf1\x93\xb4Q\xc8\xc9\xad\xf4\x00\x00\x00\xdc&\xf9\xad\xf4/\x8e\xe5\xb9\xe4\x9bv\xc0@\x0f\xe4\x05\x9a21\n\x00\x00\x00!\x0c\xf1$\x849\xbc\xef\xb3\x9d\x87\x84\x84Q\x00\x00\x00\x08dg\xa1{|\x9b\x9cw\x80M\x03\x1e\xfe\xdc\xbd\x00\x00\x00\x00\xe0?\x1e\xe5\xee\xe3\x9d\xf5\x02\xdf\x19\xcf\xbb\xe7\x19\xa3\x90\x930\n\x00\x00\x00\x11=\xe7Q\r\xb4)\xdb\x0b9y\xf9\x12\x00\x00\x00\xf7\xf0\xe6%\x00n\xe4\x19\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00p\x83R\xca\xf3\x97\xb5\xd6\xbbV\x02@N\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\xbd\x95R\x9e\xbf\xac\xb5\xde\xb5\x12\x00\xd2\x12F\x01\x00\x00\x00\x80t\x84Q\x00\x00\x00\x00 \x1da\x14\x00\x00\x00\x00HG\x18\x05\x00\x00\x00\x00\xd2\x11F\x01\x00\x00\x00\x80t\x84Q\x00\x00\x00\x00 \x1da\x14\x00\x00\x00\x00HG\x18\x05\x00\x00\xa0\xabR\xca\xf3\x97\xb5\xd6\xbbV\x02@f\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\xfd\x94R\x9e\xbf\xac\xb5\xde\xb5\x12\x00\x92\x13F\x01\x00\x00\x00\x80t\x84Q\x00\x00\x00\x00 \x1da\x14\x00\x00\x00\x00HG\x18\x05\x00\x00\x00\x00\xd2\x11F\x01\x00\x00\x00\x80t\x84Q\x00\x00\x00\x00 \x1da\x14\x00\x00\x00\x00HG\x18\x05\x00\x00\xa0\x93R\xca\xf3\x97\xb5\xd6\xbbV\x02\x00\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\x8e0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\xf4PJy\xfe\xb2\xd6z\xd7J\x00\xe0G\x18\x05\x00\x00\x00\x00\x12\x12F\x01\x00\x00\x00\x80t\x84Q\x00\x00\x00\x00 \x1da\x14\x00\x00\x00\x00HG\x18\x05\x00\x00\x00\x00\xd2\x11F\x01\x00\x00\x00\x80t\x84Q\x00\x00\x00.SJ\xb9{\t\x00\xb0\x8b0\n\x00\x00\xc0\x05J)\x8f*\xaa\x8d\x020\x84?w/\x00\x00\x00\x80\xb1\xed)\xa1/\xdfSkm\xb6\x1c\x00\xd8\xc5\xc4(\x00\x00\x00\xa7\xbcWNC\xa3\x00\xc4\'\x8c\x02\x00\x00p=m\x14\x80\xe0\x84Q\x00\x00\x00\xcerk<\x00\xc3\x11F\x01\x00\x00\xb8\x80\x1b\xea\x01\x18\x8b0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00p\rC\xa3\x00\x0cD\x18\x05\x00\x00\xa0!m\x14\x80\x98\x84Q\x00\x00\x00.\xb3\xf8\x16\xa6\x976\xeaMM\x00D \x8c\x02\x00\x00p%\xdd\x13\x80!\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x17{\x0c\x8d\x1a\x1d\x05 2a\x14\x00\x00\x80\xeb\xd5Z\xbdv\t\x80\xc8\x8a\xff\x83\x07\x00\x00@;\xbfy\xd4\xaf\x9f\x00\x84bb\x14\x00\x00\x80\x86j\xad\x92(\x00\x01\t\xa3\x00\x00\x004\xa7\x8d\x02\x10\x8d0\n\x00\x00\x00\x00\xa4#\x8c\x02\x00\x00\x00\x00\xe9\x08\xa3\x00\x00\x00\x00@:\xc2(\x00\x00\x00\x00\x90\xce\xff\x01\xa0\x91\x03\x15R\x869\xea\x00\x00\x00\x00IEND\xaeB`\x82', parent_type:str='bitable_image', file_name:str='test.png'):
    file_size = len(img_bytes)
    url = "https://open.feishu.cn/open-apis/drive/v1/medias/upload_all"
    form = {'file_name': file_name,'parent_type': parent_type ,'parent_node': appToken,'size': str(file_size),'file': (img_bytes)}  
    multi_form = MultipartEncoder(form)
    headers = {'Authorization': 'Bearer '+ tat(),}
    headers['Content-Type'] = multi_form.content_type
    response = requests.request("POST", url, headers=headers, data=multi_form).json()
    return response

from io import BytesIO  # !pip install pillow
from PIL import Image,ImageDraw,ImageFont
xypt = lambda pixel : [int(a) for a in pixel.split(',')]
rect = lambda stroke="3747,4355,100,1659688120 3746,4355,141,1659688120 3747,4355,516,1659688120 3745,4364,640,1659688120": (arr := [ xypt(s) for s in stroke.strip().split(' ')], (min( [a[0] for a in arr]), min( [a[1] for a in arr]), max( [a[0] for a in arr]), max( [a[1] for a in arr])) )[-1] # (3745, 4327, 3785, 4412)

def strokes_to_png(strokelist:list = "3747,4355,100,1659688120 3746,4355,141,1659688120 3747,4355,516,1659688120 3745,4364,640,1659688120 3745,4384,724,1659688120 3759,4408,752,1659688120 3768,4412,780,1659688120 3770,4402,744,1659688120 3780,4381,736,1659688120 3785,4366,768,1659688120 3782,4353,784,1659688120 3781,4336,792,1659688120 3776,4327,772,1659688120 3768,4330,764,1659688120 3760,4334,776,1659688120 3759,4337,712,1659688120 3750,4350,188,1659688120 3750,4361,188,1659688120;3810,4319,100,1659688121 3816,4315,198,1659688121 3819,4316,668,1659688121 3821,4317,740,1659688121 3822,4321,784,1659688121 3825,4328,812,1659688121 3833,4357,820,1659688121 3817,4492,840,1659688121 3813,4490,453,1659688121 3806,4479,104,1659688121;3821,4326,100,1659688121 3823,4324,412,1659688121 3835,4324,648,1659688121 3853,4331,708,1659688121 3868,4353,756,1659688121 3871,4378,760,1659688121 3865,4394,796,1659688121 3843,4406,756,1659688121 3820,4411,236,1659688121;3891,4369,100,1659688122 3892,4366,501,1659688122 3898,4367,660,1659688122 3902,4368,736,1659688122 3909,4370,784,1659688122 3921,4368,804,1659688122 3935,4360,792,1659688122 3939,4350,728,1659688122 3945,4339,776,1659688122 3937,4336,796,1659688122 3933,4330,816,1659688122 3924,4328,816,1659688122 3914,4331,840,1659688122 3906,4341,856,1659688122 3901,4359,856,1659688122 3902,4383,852,1659688122 3906,4409,852,1659688122 3922,4418,880,1659688122 3928,4417,868,1659688122 3935,4407,820,1659688122 3942,4390,100,1659688122 3944,4373,100,1659688122;3978,4319,100,1659688122 3976,4319,277,1659688122 3980,4325,540,1659688122 3979,4329,728,1659688122 3981,4344,828,1659688122 3980,4368,844,1659688122 3977,4385,844,1659688122 3979,4390,880,1659688122 3978,4389,872,1659688122 3977,4383,816,1659688122 3980,4364,740,1659688122 3984,4340,736,1659688122 3986,4330,764,1659688122 3991,4325,780,1659688122 4003,4318,796,1659688122 4011,4314,816,1659688122 4023,4313,816,1659688122 4029,4315,832,1659688122 4031,4317,816,1659688122 4032,4321,828,1659688122 4031,4323,872,1659688122 4032,4327,876,1659688122 4032,4333,900,1659688123 4033,4358,876,1659688123 4033,4373,868,1659688123 4033,4386,856,1659688123 4029,4405,860,1659688123 4040,4417,888,1659688123 4036,4416,872,1659688123 4034,4411,744,1659688123 4027,4399,252,1659688123 3994,4370,252,1659688123".split(';'), line_width:int=5, aslist:bool=True):
	''' 2022.9.26 '''
	if not strokelist: return [] 
	xmin,ymin,xmax, ymax = rect(" ".join(strokelist))     #strokes.replace(';',' ')
	image = Image.new('RGB', (xmax - xmin, ymax-ymin), (255, 255, 255))
	draw = ImageDraw.Draw(image)
	for line in strokelist:
		linePoints = []
		for point in line.split(' '):
			pointArr = point.split(',')
			linePoints.append(int(pointArr[0]) - xmin)
			linePoints.append(int(pointArr[1]) - ymin)
		draw.line(linePoints, fill=(0,0,0), width=line_width)
	imgBytes = BytesIO() # imageResized = image.resize((width, height)) | (width, height) = (image.width // 2, image.height // 2)
	image.save(imgBytes, format='PNG')  #image.save("open.png")
	return [byte for byte in imgBytes.getvalue()] if aslist else imgBytes.getvalue()

write_stroke_png = lambda xls, range="fc8edf!D5:D5", zkey='strokelog:ap-CC1BE0E29824:date-20220925:page-0.100.0:pen-D80BCB7002AE': requests.post(f"https://open.feishu.cn/open-apis/sheets/v2/spreadsheets/{xls}/values_image", headers = headers(), json={ 
									"range": range, 
									"image": strokes_to_png( redis.kvr.zrange(zkey, 0, -1)),
									"name": zkey + '.png'} ).json()
#print ( write_stroke_png("shtcnMWL7GZMrJbWJCntkA9uiy6") )  #print ( write_stroke_png("shtcnMWL7GZMrJbWJCntkA9uiy6", zkey="stroke:ap-CC1BE0E29824:date-20220926:page-0.100.0:pen-D80BCB7002AE:item-fill-1") )


if __name__ == '__main__': 
	print (strokes_to_png(aslist=False))