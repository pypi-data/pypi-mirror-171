variables:
  SOURCE_DIR: imarac

stages:
  - test
  - build
  - deploy

flake8:
  stage: test
  image:
    name: alpine/flake8
    entrypoint: [""]
  script:
    - flake8 --ignore=E501 ${SOURCE_DIR}

isort:
  stage: test
  image: xcgd/isort
  script:
    - isort -c ${SOURCE_DIR}

pylint:
  stage: test
  image: registry.gitlab.com/pipeline-components/pylint
  before_script:
    - pip install -r requirements.txt
  script:
    - find . -type f -name "*.py" | xargs pylint

pytest:
  stage: test
  image: python:3-alpine
  before_script:
    - pip install -r requirements.txt
    - pip install --upgrade pytest pytest-cov
  script:
    - pytest --junitxml=pytest-report.xml --cov=imarac --cov-report xml --cov-report term test/
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

build:
  stage: build
  image: python:3-alpine
  before_script:
    - apk update && apk add git
    - pip install --upgrade build
  script:
    - python -m build
  artifacts:
    paths:
      - dist/*
    expire_in: 1h

deploy:
  stage: deploy
  image: python:3-alpine
  needs:
    - job: build
      artifacts: true
  before_script:
    - pip install --upgrade twine
  script:
    - twine upload --non-interactive --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} dist/*
  rules:
    - if: $CI_COMMIT_TAG != null
